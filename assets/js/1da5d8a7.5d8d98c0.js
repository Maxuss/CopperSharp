"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[13057],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return h}});var a=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(r),h=o,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||n;return r?a.createElement(m,l(l({ref:t},s),{},{components:r})):a.createElement(m,l({ref:t},s))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,l=new Array(n);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<n;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},24750:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var a=r(87462),o=r(63366),n=(r(67294),r(3905)),l=["components"],i={title:"Struct HexadecimalTextColor",sidebar_label:"HexadecimalTextColor",description:"Represents a text color, that is represented by hex string, e.g. `#FF0000`"},p="Struct HexadecimalTextColor",c={unversionedId:"api/CopperSharp.Text/HexadecimalTextColor",id:"api/CopperSharp.Text/HexadecimalTextColor",title:"Struct HexadecimalTextColor",description:"Represents a text color, that is represented by hex string, e.g. `#FF0000`",source:"@site/docs/api/CopperSharp.Text/HexadecimalTextColor.md",sourceDirName:"api/CopperSharp.Text",slug:"/api/CopperSharp.Text/HexadecimalTextColor",permalink:"/docs/api/CopperSharp.Text/HexadecimalTextColor",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Text/HexadecimalTextColor.md",tags:[],version:"current",frontMatter:{title:"Struct HexadecimalTextColor",sidebar_label:"HexadecimalTextColor",description:"Represents a text color, that is represented by hex string, e.g. `#FF0000`"},sidebar:"tutorialSidebar",previous:{title:"FormattingType",permalink:"/docs/api/CopperSharp.Text/FormattingType"},next:{title:"HoverEvent",permalink:"/docs/api/CopperSharp.Text/HoverEvent"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"R",id:"r",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"G",id:"g",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3},{value:"B",id:"b",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"ToString()",id:"tostring",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],u={toc:s};function d(e){var t=e.components,r=(0,o.Z)(e,l);return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"struct-hexadecimaltextcolor"},"Struct HexadecimalTextColor"),(0,n.kt)("p",null,"Represents a text color, that is represented by hex string, e.g. ",(0,n.kt)("inlineCode",{parentName:"p"},"#FF0000")),(0,n.kt)("h6",{id:"assembly-coppersharpdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/HexadecimalTextColor.cs#L6"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public struct HexadecimalTextColor : ITextColor\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"r"},"R"),(0,n.kt)("p",null,"Blue value of this text color"),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/HexadecimalTextColor.cs#L35"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public int R { get; }\n")),(0,n.kt)("h3",{id:"g"},"G"),(0,n.kt)("p",null,"Green value of this text color"),(0,n.kt)("h6",{id:"view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/HexadecimalTextColor.cs#L38"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public int G { get; }\n")),(0,n.kt)("h3",{id:"b"},"B"),(0,n.kt)("p",null,"Blue value of this text color"),(0,n.kt)("h6",{id:"view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/HexadecimalTextColor.cs#L41"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public int B { get; }\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"tostring"},"ToString()"),(0,n.kt)("p",null,"Converts this text color to hex string"),(0,n.kt)("h6",{id:"view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/HexadecimalTextColor.cs#L47"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public override string ToString()\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.String"),": Hex string of this color"),(0,n.kt)("h2",{id:"implements"},"Implements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../CopperSharp.Text/ITextColor"},"CopperSharp.Text.ITextColor"))))}d.isMDXComponent=!0}}]);