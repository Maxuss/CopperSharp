"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[95005],{3905:function(t,e,r){r.d(e,{Zo:function(){return s},kt:function(){return y}});var n=r(67294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var c=n.createContext({}),p=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},s=function(t){var e=p(t.components);return n.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,c=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),d=p(r),y=a,h=d["".concat(c,".").concat(y)]||d[y]||u[y]||i;return r?n.createElement(h,l(l({ref:e},s),{},{components:r})):n.createElement(h,l({ref:e},s))}));function y(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:a,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},78358:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),l=["components"],o={title:"Class EntityBlockState<TEntity>",sidebar_label:"EntityBlockState<TEntity>",description:"Represents a block state which can contain entities"},c="Class EntityBlockState&lt;TEntity&gt;",p={unversionedId:"api/CopperSharp.Blocks/EntityBlockState`TEntity`",id:"api/CopperSharp.Blocks/EntityBlockState`TEntity`",title:"Class EntityBlockState<TEntity>",description:"Represents a block state which can contain entities",source:"@site/docs/api/CopperSharp.Blocks/EntityBlockState`TEntity`.md",sourceDirName:"api/CopperSharp.Blocks",slug:"/api/CopperSharp.Blocks/EntityBlockState`TEntity`",permalink:"/docs/api/CopperSharp.Blocks/EntityBlockState`TEntity`",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Blocks/EntityBlockState`TEntity`.md",tags:[],version:"current",frontMatter:{title:"Class EntityBlockState<TEntity>",sidebar_label:"EntityBlockState<TEntity>",description:"Represents a block state which can contain entities"},sidebar:"tutorialSidebar",previous:{title:"BlockState",permalink:"/docs/api/CopperSharp.Blocks/BlockState"},next:{title:"ILockable",permalink:"/docs/api/CopperSharp.Blocks/ILockable"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"EntityName",id:"entityname",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"AddEntity(TEntity)",id:"addentitytentity",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],u={toc:s};function d(t){var e=t.components,r=(0,a.Z)(t,l);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class-entityblockstatetentity"},"Class EntityBlockState","<","TEntity",">"),(0,i.kt)("p",null,"Represents a block state which can contain entities"),(0,i.kt)("h6",{id:"assembly-coppersharpdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/EntityBlockState.cs#L11"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract class EntityBlockState<TEntity> : BlockState, IState where TEntity : AbstractEntity\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"entityname"},"EntityName"),(0,i.kt)("p",null,"Name of the entity in this block state"),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/EntityBlockState.cs#L21"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected abstract string EntityName { get; set; }\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"addentitytentity"},"AddEntity(TEntity)"),(0,i.kt)("p",null,"Adds an entity to this entity container"),(0,i.kt)("h6",{id:"view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/EntityBlockState.cs#L30"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public EntityBlockState<TEntity> AddEntity(TEntity entity)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Blocks/EntityBlockState%60TEntity%60"},"CopperSharp.Blocks.EntityBlockState","<","TEntity",">"),": This entity block state"),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<TEntity>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"entity")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Entity to be added")))),(0,i.kt)("h2",{id:"implements"},"Implements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks/IState"},"CopperSharp.Blocks.IState"))))}d.isMDXComponent=!0}}]);