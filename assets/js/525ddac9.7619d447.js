"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[45043],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return h}});var a=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,o=function(e,r){if(null==e)return{};var t,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),c=function(e){var r=a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=c(e.components);return a.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),h=o,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||n;return t?a.createElement(m,i(i({ref:r},s),{},{components:t})):a.createElement(m,i({ref:r},s))}));function h(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var n=t.length,i=new Array(n);i[0]=d;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<n;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},55807:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var a=t(87462),o=t(63366),n=(t(67294),t(3905)),i=["components"],l={title:"Enum WoodType",sidebar_label:"WoodType",description:"Represents type of wood"},p="Enum WoodType",c={unversionedId:"api/CopperSharp.Utils/WoodType",id:"api/CopperSharp.Utils/WoodType",title:"Enum WoodType",description:"Represents type of wood",source:"@site/docs/api/CopperSharp.Utils/WoodType.md",sourceDirName:"api/CopperSharp.Utils",slug:"/api/CopperSharp.Utils/WoodType",permalink:"/docs/api/CopperSharp.Utils/WoodType",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Utils/WoodType.md",tags:[],version:"current",frontMatter:{title:"Enum WoodType",sidebar_label:"WoodType",description:"Represents type of wood"},sidebar:"tutorialSidebar",previous:{title:"Vec4<TValue>",permalink:"/docs/api/CopperSharp.Utils/Vec4`TValue`"},next:{title:"Index",permalink:"/docs/api/CopperSharp.World/"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Fields",id:"fields",children:[{value:"Oak",id:"oak",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"Spruce",id:"spruce",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3},{value:"Birch",id:"birch",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3},{value:"Jungle",id:"jungle",children:[{value:"View Source",id:"view-source-4",children:[],level:6}],level:3},{value:"Acacia",id:"acacia",children:[{value:"View Source",id:"view-source-5",children:[],level:6}],level:3},{value:"DarkOak",id:"darkoak",children:[{value:"View Source",id:"view-source-6",children:[],level:6}],level:3}],level:2}],u={toc:s};function d(e){var r=e.components,t=(0,o.Z)(e,i);return(0,n.kt)("wrapper",(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"enum-woodtype"},"Enum WoodType"),(0,n.kt)("p",null,"Represents type of wood"),(0,n.kt)("h6",{id:"assembly-coppersharpdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/WoodType.cs#L6"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public enum WoodType : int\n")),(0,n.kt)("h2",{id:"fields"},"Fields"),(0,n.kt)("h3",{id:"oak"},"Oak"),(0,n.kt)("p",null,"Oak wood"),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/WoodType.cs#L11"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Oak = 0\n")),(0,n.kt)("h3",{id:"spruce"},"Spruce"),(0,n.kt)("p",null,"Spruce wood"),(0,n.kt)("h6",{id:"view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/WoodType.cs#L16"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Spruce = 1\n")),(0,n.kt)("h3",{id:"birch"},"Birch"),(0,n.kt)("p",null,"Birch wood"),(0,n.kt)("h6",{id:"view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/WoodType.cs#L21"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Birch = 2\n")),(0,n.kt)("h3",{id:"jungle"},"Jungle"),(0,n.kt)("p",null,"Jungle wood"),(0,n.kt)("h6",{id:"view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/WoodType.cs#L26"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Jungle = 3\n")),(0,n.kt)("h3",{id:"acacia"},"Acacia"),(0,n.kt)("p",null,"Acacia wood"),(0,n.kt)("h6",{id:"view-source-5"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/WoodType.cs#L31"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Acacia = 4\n")),(0,n.kt)("h3",{id:"darkoak"},"DarkOak"),(0,n.kt)("p",null,"Dark oak wood"),(0,n.kt)("h6",{id:"view-source-6"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/WoodType.cs#L36"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"DarkOak = 5\n")))}d.isMDXComponent=!0}}]);