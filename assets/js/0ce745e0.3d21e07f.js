"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[67337],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),p=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,h=d["".concat(o,".").concat(m)]||d[m]||u[m]||i;return r?a.createElement(h,l(l({ref:t},c),{},{components:r})):a.createElement(h,l({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},95244:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var a=r(87462),n=r(63366),i=(r(67294),r(3905)),l=["components"],s={title:"Class ConcurrentList<T>",sidebar_label:"ConcurrentList<T>",description:"Represents a thread-safe list with several utility methods"},o="Class ConcurrentList&lt;T&gt;",p={unversionedId:"api/CopperSharp.Utils/ConcurrentList`T`",id:"api/CopperSharp.Utils/ConcurrentList`T`",title:"Class ConcurrentList<T>",description:"Represents a thread-safe list with several utility methods",source:"@site/docs/api/CopperSharp.Utils/ConcurrentList`T`.md",sourceDirName:"api/CopperSharp.Utils",slug:"/api/CopperSharp.Utils/ConcurrentList`T`",permalink:"/docs/api/CopperSharp.Utils/ConcurrentList`T`",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Utils/ConcurrentList`T`.md",tags:[],version:"current",frontMatter:{title:"Class ConcurrentList<T>",sidebar_label:"ConcurrentList<T>",description:"Represents a thread-safe list with several utility methods"},sidebar:"tutorialSidebar",previous:{title:"AsyncUtils",permalink:"/docs/api/CopperSharp.Utils/AsyncUtils"},next:{title:"EnchantDataAttribute",permalink:"/docs/api/CopperSharp.Utils/EnchantDataAttribute"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"Count",id:"count",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"ItemInt32",id:"itemint32",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"Dispose()",id:"dispose",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3},{value:"Add(T)",id:"addt",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"AddRange(T[])",id:"addranget",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"Clear()",id:"clear",children:[{value:"View Source",id:"view-source-6",children:[],level:6}],level:3},{value:"Remove(T)",id:"removet",children:[{value:"View Source",id:"view-source-7",children:[],level:6},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3},{value:"RemoveAt(Int32)",id:"removeatint32",children:[{value:"View Source",id:"view-source-8",children:[],level:6},{value:"Parameters",id:"parameters-3",children:[],level:5}],level:3},{value:"Any()",id:"any",children:[{value:"View Source",id:"view-source-9",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5}],level:3},{value:"Dispose(Boolean)",id:"disposeboolean",children:[{value:"View Source",id:"view-source-10",children:[],level:6},{value:"Parameters",id:"parameters-4",children:[],level:5}],level:3},{value:"Finalize()",id:"finalize",children:[{value:"View Source",id:"view-source-11",children:[],level:6}],level:3}],level:2}],u={toc:c};function d(e){var t=e.components,r=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class-concurrentlistt"},"Class ConcurrentList","<","T",">"),(0,i.kt)("p",null,"Represents a thread-safe list with several utility methods"),(0,i.kt)("h6",{id:"assembly-coppersharpdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L7"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class ConcurrentList<T> : IDisposable\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"count"},"Count"),(0,i.kt)("p",null,"Counts the amount of elements in this list"),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L15"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public int Count { get; }\n")),(0,i.kt)("h3",{id:"itemint32"},"Item","[Int32]"),(0,i.kt)("p",null,"Accesses this list"),(0,i.kt)("h6",{id:"view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L35"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public T this[int at] { get; set; }\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"dispose"},"Dispose()"),(0,i.kt)("h6",{id:"view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L64"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Dispose()\n")),(0,i.kt)("h3",{id:"addt"},"Add(T)"),(0,i.kt)("p",null,"Adds an element to this list"),(0,i.kt)("h6",{id:"view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L74"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Add(T item)\n")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<T>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"item")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Item to be added")))),(0,i.kt)("h3",{id:"addranget"},"AddRange(T[])"),(0,i.kt)("p",null,"Adds multiple items to this list"),(0,i.kt)("h6",{id:"view-source-5"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L91"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void AddRange(params T[] values)\n")),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"values")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Values to be added")))),(0,i.kt)("h3",{id:"clear"},"Clear()"),(0,i.kt)("p",null,"Clears this list"),(0,i.kt)("h6",{id:"view-source-6"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L107"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Clear()\n")),(0,i.kt)("h3",{id:"removet"},"Remove(T)"),(0,i.kt)("p",null,"Removes an element from this list"),(0,i.kt)("h6",{id:"view-source-7"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L124"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Remove(T item)\n")),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<T>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"item")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Element to be removed")))),(0,i.kt)("h3",{id:"removeatint32"},"RemoveAt(Int32)"),(0,i.kt)("p",null,"Removes an element from certain position in this list"),(0,i.kt)("h6",{id:"view-source-8"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L141"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void RemoveAt(int at)\n")),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Int32")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"at")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Position to be cleared")))),(0,i.kt)("h3",{id:"any"},"Any()"),(0,i.kt)("p",null,"Checks whether this collection has any items"),(0,i.kt)("h6",{id:"view-source-9"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L157"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool Any()\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Boolean")),(0,i.kt)("h3",{id:"disposeboolean"},"Dispose(Boolean)"),(0,i.kt)("p",null,"Virtually disposes the list"),(0,i.kt)("h6",{id:"view-source-10"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L166"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected virtual void Dispose(bool disposing)\n")),(0,i.kt)("h5",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"disposing")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether the list is disposing")))),(0,i.kt)("h3",{id:"finalize"},"Finalize()"),(0,i.kt)("p",null,"Disposes this concurrent list"),(0,i.kt)("h6",{id:"view-source-11"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ConcurrentList.cs#L176"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected void Finalize()\n")))}d.isMDXComponent=!0}}]);