"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[49599],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(r),f=n,h=d["".concat(p,".").concat(f)]||d[f]||u[f]||o;return r?a.createElement(h,l(l({ref:t},s),{},{components:r})):a.createElement(h,l({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},31144:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var a=r(87462),n=r(63366),o=(r(67294),r(3905)),l=["components"],i={title:"Enum IBisected.Half",sidebar_label:"IBisected.Half",description:"Type of bisected half"},p="Enum IBisected.Half",c={unversionedId:"api/CopperSharp.Blocks.Data/IBisected.Half",id:"api/CopperSharp.Blocks.Data/IBisected.Half",title:"Enum IBisected.Half",description:"Type of bisected half",source:"@site/docs/api/CopperSharp.Blocks.Data/IBisected.Half.md",sourceDirName:"api/CopperSharp.Blocks.Data",slug:"/api/CopperSharp.Blocks.Data/IBisected.Half",permalink:"/docs/api/CopperSharp.Blocks.Data/IBisected.Half",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Blocks.Data/IBisected.Half.md",tags:[],version:"current",frontMatter:{title:"Enum IBisected.Half",sidebar_label:"IBisected.Half",description:"Type of bisected half"},sidebar:"tutorialSidebar",previous:{title:"IAttachable",permalink:"/docs/api/CopperSharp.Blocks.Data/IAttachable"},next:{title:"IBisected",permalink:"/docs/api/CopperSharp.Blocks.Data/IBisected"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Fields",id:"fields",children:[{value:"Upper",id:"upper",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"Lower",id:"lower",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3}],level:2}],u={toc:s};function d(e){var t=e.components,r=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"enum-ibisectedhalf"},"Enum IBisected.Half"),(0,o.kt)("p",null,"Type of bisected half"),(0,o.kt)("h6",{id:"assembly-coppersharpdll"},(0,o.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,o.kt)("h6",{id:"view-source"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/IBisected.cs#L11"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public enum Half : int\n")),(0,o.kt)("h2",{id:"fields"},"Fields"),(0,o.kt)("h3",{id:"upper"},"Upper"),(0,o.kt)("p",null,"Upper half, or TOP"),(0,o.kt)("h6",{id:"view-source-1"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/IBisected.cs#L16"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Upper = 0\n")),(0,o.kt)("h3",{id:"lower"},"Lower"),(0,o.kt)("p",null,"Lower half, or BOTTOM"),(0,o.kt)("h6",{id:"view-source-2"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/IBisected.cs#L21"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Lower = 1\n")))}d.isMDXComponent=!0}}]);