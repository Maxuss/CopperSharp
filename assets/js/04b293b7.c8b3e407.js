"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[18192],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},p=Object.keys(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),s=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,p=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(r),h=n,u=d["".concat(o,".").concat(h)]||d[h]||m[h]||p;return r?a.createElement(u,i(i({ref:t},c),{},{components:r})):a.createElement(u,i({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=r.length,i=new Array(p);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var s=2;s<p;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96853:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var a=r(87462),n=r(63366),p=(r(67294),r(3905)),i=["components"],l={title:"Class HopperMinecart",sidebar_label:"HopperMinecart",description:"Represents a hopper minecart vehicle"},o="Class HopperMinecart",s={unversionedId:"api/CopperSharp.Entity.Impl/HopperMinecart",id:"api/CopperSharp.Entity.Impl/HopperMinecart",title:"Class HopperMinecart",description:"Represents a hopper minecart vehicle",source:"@site/docs/api/CopperSharp.Entity.Impl/HopperMinecart.md",sourceDirName:"api/CopperSharp.Entity.Impl",slug:"/api/CopperSharp.Entity.Impl/HopperMinecart",permalink:"/docs/api/CopperSharp.Entity.Impl/HopperMinecart",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Entity.Impl/HopperMinecart.md",tags:[],version:"current",frontMatter:{title:"Class HopperMinecart",sidebar_label:"HopperMinecart",description:"Represents a hopper minecart vehicle"},sidebar:"tutorialSidebar",previous:{title:"Hoglin",permalink:"/docs/api/CopperSharp.Entity.Impl/Hoglin"},next:{title:"Horse.Color",permalink:"/docs/api/CopperSharp.Entity.Impl/Horse.Color"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"Enabled(Boolean)",id:"enabledboolean",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"TransferCooldown(Int32)",id:"transfercooldownint32",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"AddItems(ItemStack[])",id:"additemsitemstack",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3},{value:"LootTable(Identifier)",id:"loottableidentifier",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-3",children:[],level:5}],level:3},{value:"SerializeExtra(INbtWriter)",id:"serializeextrainbtwriter",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-4",children:[],level:5},{value:"Parameters",id:"parameters-4",children:[],level:5}],level:3}],level:2}],m={toc:c};function d(e){var t=e.components,r=(0,n.Z)(e,i);return(0,p.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"class-hopperminecart"},"Class HopperMinecart"),(0,p.kt)("p",null,"Represents a hopper minecart vehicle"),(0,p.kt)("h6",{id:"assembly-coppersharpdll"},(0,p.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,p.kt)("h6",{id:"view-source"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/HopperMinecart.cs#L10"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class HopperMinecart : AbstractMinecart\n")),(0,p.kt)("h2",{id:"methods"},"Methods"),(0,p.kt)("h3",{id:"enabledboolean"},"Enabled(Boolean)"),(0,p.kt)("p",null,"Whether to enable this hopper minecart"),(0,p.kt)("h6",{id:"view-source-1"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/HopperMinecart.cs#L23"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public HopperMinecart Enabled(bool enable = true)\n")),(0,p.kt)("h5",{id:"returns"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Entity.Impl/HopperMinecart"},"CopperSharp.Entity.Impl.HopperMinecart"),": This hopper minecart"),(0,p.kt)("h5",{id:"parameters"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"enable")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,p.kt)("h3",{id:"transfercooldownint32"},"TransferCooldown(Int32)"),(0,p.kt)("p",null,"Sets cooldown between this hopper can transfer items.\nCooldown must be within range of 0 to 8.\nSet 0 if there is no transfer"),(0,p.kt)("h6",{id:"view-source-2"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/HopperMinecart.cs#L36"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public HopperMinecart TransferCooldown(int cd)\n")),(0,p.kt)("h5",{id:"returns-1"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Entity.Impl/HopperMinecart"},"CopperSharp.Entity.Impl.HopperMinecart")),(0,p.kt)("h5",{id:"parameters-1"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"System.Int32")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"cd"))))),(0,p.kt)("h3",{id:"additemsitemstack"},"AddItems(ItemStack[])"),(0,p.kt)("p",null,"Adds provided items to this minecart","'","s storage"),(0,p.kt)("h6",{id:"view-source-3"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/HopperMinecart.cs#L47"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public HopperMinecart AddItems(params ItemStack[] items)\n")),(0,p.kt)("h5",{id:"returns-2"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Entity.Impl/HopperMinecart"},"CopperSharp.Entity.Impl.HopperMinecart"),": This hopper minecart"),(0,p.kt)("h5",{id:"parameters-2"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"CopperSharp.Item.ItemStack[]")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"items")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Items to be added")))),(0,p.kt)("h3",{id:"loottableidentifier"},"LootTable(Identifier)"),(0,p.kt)("p",null,"Sets loot table used to populate this minecart","'","s contents"),(0,p.kt)("h6",{id:"view-source-4"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/HopperMinecart.cs#L58"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public HopperMinecart LootTable(Identifier table)\n")),(0,p.kt)("h5",{id:"returns-3"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Entity.Impl/HopperMinecart"},"CopperSharp.Entity.Impl.HopperMinecart"),": This hopper minecart"),(0,p.kt)("h5",{id:"parameters-3"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"../CopperSharp.Registry/Identifier"},"CopperSharp.Registry.Identifier")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"table")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Loot table identifier")))),(0,p.kt)("h3",{id:"serializeextrainbtwriter"},"SerializeExtra(INbtWriter)"),(0,p.kt)("p",null,"Serializes extra data from this inheritor"),(0,p.kt)("h6",{id:"view-source-5"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/HopperMinecart.cs#L65"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected override Task SerializeExtra(INbtWriter sw)\n")),(0,p.kt)("h5",{id:"returns-4"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Task")),(0,p.kt)("h5",{id:"parameters-4"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"../CopperSharp.Data.SNbt/INbtWriter"},"CopperSharp.Data.SNbt.INbtWriter")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"sw")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Writer to which the data should be written")))))}d.isMDXComponent=!0}}]);