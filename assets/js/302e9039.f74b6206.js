"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[38862],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return f}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},c=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),f=a,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return t?n.createElement(m,p(p({ref:r},c),{},{components:t})):n.createElement(m,p({ref:r},c))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,p=new Array(o);p[0]=u;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var s=2;s<o;s++)p[s]=t[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},42128:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var n=t(87462),a=t(63366),o=(t(67294),t(3905)),p=["components"],i={title:"Namespace CopperSharp.Models",sidebar_label:"Index",sidebar_position:0},l="Namespace CopperSharp.Models",s={unversionedId:"api/CopperSharp.Models/CopperSharp.Models",id:"api/CopperSharp.Models/CopperSharp.Models",title:"Namespace CopperSharp.Models",description:"Classes",source:"@site/docs/api/CopperSharp.Models/CopperSharp.Models.md",sourceDirName:"api/CopperSharp.Models",slug:"/api/CopperSharp.Models/",permalink:"/docs/api/CopperSharp.Models/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Models/CopperSharp.Models.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Models",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"SkullMeta",permalink:"/docs/api/CopperSharp.Item.Meta/SkullMeta"},next:{title:"Disguise",permalink:"/docs/api/CopperSharp.Models/Disguise"}},c=[{value:"Classes",id:"classes",children:[{value:"ModelManager",id:"modelmanager",children:[],level:3}],level:2},{value:"Structs",id:"structs",children:[{value:"Disguise",id:"disguise",children:[],level:3}],level:2},{value:"Interfaces",id:"interfaces",children:[{value:"IModel",id:"imodel",children:[],level:3}],level:2}],d={toc:c};function u(e){var r=e.components,t=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"namespace-coppersharpmodels"},"Namespace CopperSharp.Models"),(0,o.kt)("h2",{id:"classes"},"Classes"),(0,o.kt)("h3",{id:"modelmanager"},(0,o.kt)("a",{parentName:"h3",href:"../CopperSharp.Models/ModelManager"},"ModelManager")),(0,o.kt)("p",null,"A model manager, which can allocate values for model data"),(0,o.kt)("h2",{id:"structs"},"Structs"),(0,o.kt)("h3",{id:"disguise"},(0,o.kt)("a",{parentName:"h3",href:"../CopperSharp.Models/Disguise"},"Disguise")),(0,o.kt)("p",null,"Represents an item, visually disguised as another item"),(0,o.kt)("h2",{id:"interfaces"},"Interfaces"),(0,o.kt)("h3",{id:"imodel"},(0,o.kt)("a",{parentName:"h3",href:"../CopperSharp.Models/IModel"},"IModel")),(0,o.kt)("p",null,"An interface for managing models"))}u.isMDXComponent=!0}}]);