"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3004],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),f=o,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},65970:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],c={title:"Interface IRetranslatingCondition",sidebar_label:"IRetranslatingCondition",description:"A global interface for conditions that retranslate command world output to an internal function"},l="Interface IRetranslatingCondition",p={unversionedId:"api/CopperSharp.Predicates.Conditions/IRetranslatingCondition",id:"api/CopperSharp.Predicates.Conditions/IRetranslatingCondition",title:"Interface IRetranslatingCondition",description:"A global interface for conditions that retranslate command world output to an internal function",source:"@site/docs/api/CopperSharp.Predicates.Conditions/IRetranslatingCondition.md",sourceDirName:"api/CopperSharp.Predicates.Conditions",slug:"/api/CopperSharp.Predicates.Conditions/IRetranslatingCondition",permalink:"/docs/api/CopperSharp.Predicates.Conditions/IRetranslatingCondition",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Predicates.Conditions/IRetranslatingCondition.md",tags:[],version:"current",frontMatter:{title:"Interface IRetranslatingCondition",sidebar_label:"IRetranslatingCondition",description:"A global interface for conditions that retranslate command world output to an internal function"},sidebar:"tutorialSidebar",previous:{title:"ICondition",permalink:"/docs/api/CopperSharp.Predicates.Conditions/ICondition"},next:{title:"Index",permalink:"/docs/api/CopperSharp.Registry/"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6}],d={toc:s};function u(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"interface-iretranslatingcondition"},"Interface IRetranslatingCondition"),(0,i.kt)("p",null,"A global interface for conditions that retranslate command world output to an internal function"),(0,i.kt)("h6",{id:"assembly-coppersharpdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Predicates/Conditions/IRetranslatingCondition.cs#L6"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IRetranslatingCondition : ICondition\n")))}u.isMDXComponent=!0}}]);