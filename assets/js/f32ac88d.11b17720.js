"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2402],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var o=n.createContext({}),s=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(r),d=l,h=m["".concat(o,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function d(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,i=new Array(a);i[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},53556:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var n=r(87462),l=r(63366),a=(r(67294),r(3905)),i=["components"],p={title:"Class Illusioner",sidebar_label:"Illusioner",description:"Represents an illusioner entity"},o="Class Illusioner",s={unversionedId:"api/CopperSharp.Entity.Impl/Illusioner",id:"api/CopperSharp.Entity.Impl/Illusioner",title:"Class Illusioner",description:"Represents an illusioner entity",source:"@site/docs/api/CopperSharp.Entity.Impl/Illusioner.md",sourceDirName:"api/CopperSharp.Entity.Impl",slug:"/api/CopperSharp.Entity.Impl/Illusioner",permalink:"/docs/api/CopperSharp.Entity.Impl/Illusioner",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Entity.Impl/Illusioner.md",tags:[],version:"current",frontMatter:{title:"Class Illusioner",sidebar_label:"Illusioner",description:"Represents an illusioner entity"},sidebar:"tutorialSidebar",previous:{title:"Husk",permalink:"/docs/api/CopperSharp.Entity.Impl/Husk"},next:{title:"IronGolem",permalink:"/docs/api/CopperSharp.Entity.Impl/IronGolem"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"SpellTicks(Int32)",id:"spellticksint32",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3}],level:2}],u={toc:c};function m(e){var t=e.components,r=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"class-illusioner"},"Class Illusioner"),(0,a.kt)("p",null,"Represents an illusioner entity"),(0,a.kt)("h6",{id:"assembly-coppersharpdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,a.kt)("h6",{id:"view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/Illusioner.cs#L6"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class Illusioner : RaidEntity\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"spellticksint32"},"SpellTicks(Int32)"),(0,a.kt)("p",null,"Sets number of ticks until a spell can be cast"),(0,a.kt)("h6",{id:"view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/Illusioner.cs#L17"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Illusioner SpellTicks(int ticks)\n")),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../CopperSharp.Entity.Impl/Illusioner"},"CopperSharp.Entity.Impl.Illusioner"),": This illusioner"),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"System.Int32")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("em",{parentName:"td"},"ticks")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Amount of time in ticks")))))}m.isMDXComponent=!0}}]);