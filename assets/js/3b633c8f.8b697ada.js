"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[20161],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return u}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),s=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(r),u=n,h=d["".concat(i,".").concat(u)]||d[u]||m[u]||o;return r?a.createElement(h,p(p({ref:t},c),{},{components:r})):a.createElement(h,p({ref:t},c))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,p=new Array(o);p[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,p[1]=l;for(var s=2;s<o;s++)p[s]=r[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},25410:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var a=r(87462),n=r(63366),o=(r(67294),r(3905)),p=["components"],l={title:"Class TextComponent",sidebar_label:"TextComponent",description:"A text based component for raw strings"},i="Class TextComponent",s={unversionedId:"api/CopperSharp.Text/TextComponent",id:"api/CopperSharp.Text/TextComponent",title:"Class TextComponent",description:"A text based component for raw strings",source:"@site/docs/api/CopperSharp.Text/TextComponent.md",sourceDirName:"api/CopperSharp.Text",slug:"/api/CopperSharp.Text/TextComponent",permalink:"/docs/api/CopperSharp.Text/TextComponent",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Text/TextComponent.md",tags:[],version:"current",frontMatter:{title:"Class TextComponent",sidebar_label:"TextComponent",description:"A text based component for raw strings"},sidebar:"tutorialSidebar",previous:{title:"ScoreboardComponent",permalink:"/docs/api/CopperSharp.Text/ScoreboardComponent"},next:{title:"TextFormatting",permalink:"/docs/api/CopperSharp.Text/TextFormatting"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"ComponentType",id:"componenttype",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"QuadraticGradient(ITextColor, ITextColor, Boolean)",id:"quadraticgradientitextcolor-itextcolor-boolean",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"LinearGradient(ITextColor, ITextColor)",id:"lineargradientitextcolor-itextcolor",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"SerializeExtra(JsonTextWriter)",id:"serializeextrajsontextwriter",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3}],level:2}],m={toc:c};function d(e){var t=e.components,r=(0,n.Z)(e,p);return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"class-textcomponent"},"Class TextComponent"),(0,o.kt)("p",null,"A text based component for raw strings"),(0,o.kt)("h6",{id:"assembly-coppersharpdll"},(0,o.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,o.kt)("h6",{id:"view-source"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/TextComponent.cs#L11"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class TextComponent : Component\n")),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"componenttype"},"ComponentType"),(0,o.kt)("p",null,"Type of current component"),(0,o.kt)("h6",{id:"view-source-1"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/TextComponent.cs#L28"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public override ComponentType ComponentType { get; }\n")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"quadraticgradientitextcolor-itextcolor-boolean"},"QuadraticGradient(ITextColor, ITextColor, Boolean)"),(0,o.kt)("p",null,"Constructs a quadratic gradient between two colors"),(0,o.kt)("h6",{id:"view-source-2"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/TextComponent.cs#L31"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public override Component QuadraticGradient(ITextColor from, ITextColor to, bool fast = true)\n")),(0,o.kt)("h5",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../CopperSharp.Text/Component"},"CopperSharp.Text.Component"),": This component"),(0,o.kt)("h5",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"../CopperSharp.Text/ITextColor"},"CopperSharp.Text.ITextColor")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"from")),(0,o.kt)("td",{parentName:"tr",align:"left"},"From color")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"../CopperSharp.Text/ITextColor"},"CopperSharp.Text.ITextColor")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"to")),(0,o.kt)("td",{parentName:"tr",align:"left"},"To color")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"fast")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Whether to speed up gradient interpolation over time")))),(0,o.kt)("h3",{id:"lineargradientitextcolor-itextcolor"},"LinearGradient(ITextColor, ITextColor)"),(0,o.kt)("p",null,"Constructs a linear gradient between two colors"),(0,o.kt)("h6",{id:"view-source-3"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/TextComponent.cs#L46"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public override Component LinearGradient(ITextColor from, ITextColor to)\n")),(0,o.kt)("h5",{id:"returns-1"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../CopperSharp.Text/Component"},"CopperSharp.Text.Component"),": This component"),(0,o.kt)("h5",{id:"parameters-1"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"../CopperSharp.Text/ITextColor"},"CopperSharp.Text.ITextColor")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"from")),(0,o.kt)("td",{parentName:"tr",align:"left"},"From color")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"../CopperSharp.Text/ITextColor"},"CopperSharp.Text.ITextColor")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"to")),(0,o.kt)("td",{parentName:"tr",align:"left"},"To color")))),(0,o.kt)("h3",{id:"serializeextrajsontextwriter"},"SerializeExtra(JsonTextWriter)"),(0,o.kt)("p",null,"Serializes extra data for this component"),(0,o.kt)("h6",{id:"view-source-4"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/TextComponent.cs#L61"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected override Task SerializeExtra(JsonTextWriter jw)\n")),(0,o.kt)("h5",{id:"returns-2"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Task")),(0,o.kt)("h5",{id:"parameters-2"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"JsonTextWriter")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"jw")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Writer to be used for serializing")))))}d.isMDXComponent=!0}}]);