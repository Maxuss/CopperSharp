"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[92432],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return h}});var r=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=r.createContext({}),c=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},s=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,p=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=c(a),h=l,k=m["".concat(i,".").concat(h)]||m[h]||d[h]||p;return a?r.createElement(k,n(n({ref:t},s),{},{components:a})):r.createElement(k,n({ref:t},s))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var p=a.length,n=new Array(p);n[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:l,n[1]=o;for(var c=2;c<p;c++)n[c]=a[c];return r.createElement.apply(null,n)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},78889:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var r=a(87462),l=a(63366),p=(a(67294),a(3905)),n=["components"],o={title:"Class TrapDoor",sidebar_label:"TrapDoor",description:"Represents a trap door block"},i="Class TrapDoor",c={unversionedId:"api/CopperSharp.Blocks.Data.Impl/TrapDoor",id:"api/CopperSharp.Blocks.Data.Impl/TrapDoor",title:"Class TrapDoor",description:"Represents a trap door block",source:"@site/docs/api/CopperSharp.Blocks.Data.Impl/TrapDoor.md",sourceDirName:"api/CopperSharp.Blocks.Data.Impl",slug:"/api/CopperSharp.Blocks.Data.Impl/TrapDoor",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/TrapDoor",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Blocks.Data.Impl/TrapDoor.md",tags:[],version:"current",frontMatter:{title:"Class TrapDoor",sidebar_label:"TrapDoor",description:"Represents a trap door block"},sidebar:"tutorialSidebar",previous:{title:"Tnt",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/Tnt"},next:{title:"Tripwire",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/Tripwire"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"SetHalf(IBisected.Half)",id:"sethalfibisectedhalf",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"Facing(BlockFace)",id:"facingblockface",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"Open(Boolean)",id:"openboolean",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3},{value:"Powered(Boolean)",id:"poweredboolean",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-3",children:[],level:5}],level:3},{value:"Waterlogged(Boolean)",id:"waterloggedboolean",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-4",children:[],level:5},{value:"Parameters",id:"parameters-4",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],d={toc:s};function m(e){var t=e.components,a=(0,l.Z)(e,n);return(0,p.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"class-trapdoor"},"Class TrapDoor"),(0,p.kt)("p",null,"Represents a trap door block"),(0,p.kt)("h6",{id:"assembly-coppersharpdll"},(0,p.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,p.kt)("h6",{id:"view-source"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/TrapDoor.cs#L6"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class TrapDoor : AbstractBlockData, IBisected, IDirectional, IOpenable, IPowerable, IWaterlogged, IBlockData\n")),(0,p.kt)("h2",{id:"methods"},"Methods"),(0,p.kt)("h3",{id:"sethalfibisectedhalf"},"SetHalf(IBisected.Half)"),(0,p.kt)("p",null,"Sets half of this bisected entity"),(0,p.kt)("h6",{id:"view-source-1"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/TrapDoor.cs#L15"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IBisected SetHalf(IBisected.Half half)\n")),(0,p.kt)("h5",{id:"returns"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Blocks.Data/IBisected"},"CopperSharp.Blocks.Data.IBisected"),": This bisected entity"),(0,p.kt)("h5",{id:"parameters"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"../CopperSharp.Blocks.Data/IBisected.Half"},"CopperSharp.Blocks.Data.IBisected.Half")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"half")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Half to be set")))),(0,p.kt)("h3",{id:"facingblockface"},"Facing(BlockFace)"),(0,p.kt)("p",null,"Sets facing rotation of this directional entity"),(0,p.kt)("h6",{id:"view-source-2"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/TrapDoor.cs#L22"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IDirectional Facing(BlockFace face)\n")),(0,p.kt)("h5",{id:"returns-1"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Blocks.Data/IDirectional"},"CopperSharp.Blocks.Data.IDirectional"),": This directional entity"),(0,p.kt)("h5",{id:"parameters-1"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"../CopperSharp.Blocks.Data/BlockFace"},"CopperSharp.Blocks.Data.BlockFace")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"face")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Face to be set")))),(0,p.kt)("h3",{id:"openboolean"},"Open(Boolean)"),(0,p.kt)("p",null,"Opens this openable tile entity"),(0,p.kt)("h6",{id:"view-source-3"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/TrapDoor.cs#L32"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IOpenable Open(bool open = true)\n")),(0,p.kt)("h5",{id:"returns-2"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Blocks.Data/IOpenable"},"CopperSharp.Blocks.Data.IOpenable"),": This openable entity"),(0,p.kt)("h5",{id:"parameters-2"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"open")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Whether to open this tile entity")))),(0,p.kt)("h3",{id:"poweredboolean"},"Powered(Boolean)"),(0,p.kt)("p",null,"Whether to make this tile entity powered"),(0,p.kt)("h6",{id:"view-source-4"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/TrapDoor.cs#L39"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IPowerable Powered(bool power = true)\n")),(0,p.kt)("h5",{id:"returns-3"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Blocks.Data/IPowerable"},"CopperSharp.Blocks.Data.IPowerable"),": This powerable entity"),(0,p.kt)("h5",{id:"parameters-3"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"power")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Whether to make this tile entity powered")))),(0,p.kt)("h3",{id:"waterloggedboolean"},"Waterlogged(Boolean)"),(0,p.kt)("p",null,"Makes this block entity waterlogged"),(0,p.kt)("h6",{id:"view-source-5"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/TrapDoor.cs#L46"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IWaterlogged Waterlogged(bool logged = true)\n")),(0,p.kt)("h5",{id:"returns-4"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Blocks.Data/IWaterlogged"},"CopperSharp.Blocks.Data.IWaterlogged"),": This block entity"),(0,p.kt)("h5",{id:"parameters-4"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"logged")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Whether to make this block entity waterlogged")))),(0,p.kt)("h2",{id:"implements"},"Implements"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IBisected"},"CopperSharp.Blocks.Data.IBisected")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IDirectional"},"CopperSharp.Blocks.Data.IDirectional")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IOpenable"},"CopperSharp.Blocks.Data.IOpenable")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IPowerable"},"CopperSharp.Blocks.Data.IPowerable")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IWaterlogged"},"CopperSharp.Blocks.Data.IWaterlogged")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IBlockData"},"CopperSharp.Blocks.Data.IBlockData"))))}m.isMDXComponent=!0}}]);