"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16675],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return v}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(t),v=o,y=d["".concat(i,".").concat(v)]||d[v]||u[v]||a;return t?n.createElement(y,p(p({ref:r},c),{},{components:t})):n.createElement(y,p({ref:r},c))}));function v(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,p=new Array(a);p[0]=d;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,p[1]=s;for(var l=2;l<a;l++)p[l]=t[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},60981:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var n=t(87462),o=t(63366),a=(t(67294),t(3905)),p=["components"],s={title:"Class DispenserInventory",sidebar_label:"DispenserInventory",description:"Represents a dispenser/dropper inventory"},i="Class DispenserInventory",l={unversionedId:"api/CopperSharp.Blocks.State/DispenserInventory",id:"api/CopperSharp.Blocks.State/DispenserInventory",title:"Class DispenserInventory",description:"Represents a dispenser/dropper inventory",source:"@site/docs/api/CopperSharp.Blocks.State/DispenserInventory.md",sourceDirName:"api/CopperSharp.Blocks.State",slug:"/api/CopperSharp.Blocks.State/DispenserInventory",permalink:"/docs/api/CopperSharp.Blocks.State/DispenserInventory",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Blocks.State/DispenserInventory.md",tags:[],version:"current",frontMatter:{title:"Class DispenserInventory",sidebar_label:"DispenserInventory",description:"Represents a dispenser/dropper inventory"},sidebar:"tutorialSidebar",previous:{title:"DefaultBlockState",permalink:"/docs/api/CopperSharp.Blocks.State/DefaultBlockState"},next:{title:"DispenserState",permalink:"/docs/api/CopperSharp.Blocks.State/DispenserState"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"MaxSize",id:"maxsize",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3}],level:2}],u={toc:c};function d(e){var r=e.components,t=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"class-dispenserinventory"},"Class DispenserInventory"),(0,a.kt)("p",null,"Represents a dispenser/dropper inventory"),(0,a.kt)("h6",{id:"assembly-coppersharpdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,a.kt)("h6",{id:"view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/State/DispenserInventory.cs#L8"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class DispenserInventory : Inventory\n")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"maxsize"},"MaxSize"),(0,a.kt)("p",null,"Max amount of items in this inventory"),(0,a.kt)("h6",{id:"view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/State/DispenserInventory.cs#L11"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected override int MaxSize { get; }\n")))}d.isMDXComponent=!0}}]);