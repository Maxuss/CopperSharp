"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5955],{3905:function(e,r,t){t.d(r,{Zo:function(){return d},kt:function(){return m}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},d=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,v=u["".concat(i,".").concat(m)]||u[m]||s[m]||c;return t?n.createElement(v,p(p({ref:r},d),{},{components:t})):n.createElement(v,p({ref:r},d))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var c=t.length,p=new Array(c);p[0]=u;var o={};for(var i in r)hasOwnProperty.call(r,i)&&(o[i]=r[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var l=2;l<c;l++)p[l]=t[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},92269:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return o},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return d},default:function(){return u}});var n=t(87462),a=t(63366),c=(t(67294),t(3905)),p=["components"],o={title:"Struct AdvancementReward",sidebar_label:"AdvancementReward",description:"Represents an advancement reward"},i="Struct AdvancementReward",l={unversionedId:"api/CopperSharp.Advancements/AdvancementReward",id:"api/CopperSharp.Advancements/AdvancementReward",title:"Struct AdvancementReward",description:"Represents an advancement reward",source:"@site/docs/api/CopperSharp.Advancements/AdvancementReward.md",sourceDirName:"api/CopperSharp.Advancements",slug:"/api/CopperSharp.Advancements/AdvancementReward",permalink:"/docs/api/CopperSharp.Advancements/AdvancementReward",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Advancements/AdvancementReward.md",tags:[],version:"current",frontMatter:{title:"Struct AdvancementReward",sidebar_label:"AdvancementReward",description:"Represents an advancement reward"},sidebar:"tutorialSidebar",previous:{title:"AdvancementGroup",permalink:"/docs/api/CopperSharp.Advancements/AdvancementGroup"},next:{title:"AdvancementType",permalink:"/docs/api/CopperSharp.Advancements/AdvancementType"}},d=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"Recipe",id:"recipe",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3}],level:2}],s={toc:d};function u(e){var r=e.components,t=(0,a.Z)(e,p);return(0,c.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"struct-advancementreward"},"Struct AdvancementReward"),(0,c.kt)("p",null,"Represents an advancement reward"),(0,c.kt)("h6",{id:"assembly-coppersharpdll"},(0,c.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,c.kt)("h6",{id:"view-source"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/AdvancementReward.cs#L9"},"View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public struct AdvancementReward\n")),(0,c.kt)("h2",{id:"properties"},"Properties"),(0,c.kt)("h3",{id:"recipe"},"Recipe"),(0,c.kt)("p",null,"Recipes to be given. Empty by default."),(0,c.kt)("h6",{id:"view-source-1"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/AdvancementReward.cs#L14"},"View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public List<Identifier> Recipe { get; }\n")))}u.isMDXComponent=!0}}]);