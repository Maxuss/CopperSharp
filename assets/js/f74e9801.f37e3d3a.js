"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9367],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return d}});var i=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=i.createContext({}),l=function(e){var r=i.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return i.createElement(o.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},g=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),g=l(t),d=n,y=g["".concat(o,".").concat(d)]||g[d]||u[d]||a;return t?i.createElement(y,s(s({ref:r},c),{},{components:t})):i.createElement(y,s({ref:r},c))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,s=new Array(a);s[0]=g;var p={};for(var o in r)hasOwnProperty.call(r,o)&&(p[o]=r[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,s[1]=p;for(var l=2;l<a;l++)s[l]=t[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},25201:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return c},default:function(){return g}});var i=t(87462),n=t(63366),a=(t(67294),t(3905)),s=["components"],p={title:"Namespace CopperSharp.Registry",sidebar_label:"Index",sidebar_position:0},o="Namespace CopperSharp.Registry",l={unversionedId:"api/CopperSharp.Registry/CopperSharp.Registry",id:"api/CopperSharp.Registry/CopperSharp.Registry",title:"Namespace CopperSharp.Registry",description:"Classes",source:"@site/docs/api/CopperSharp.Registry/CopperSharp.Registry.md",sourceDirName:"api/CopperSharp.Registry",slug:"/api/CopperSharp.Registry/",permalink:"/docs/api/CopperSharp.Registry/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Registry/CopperSharp.Registry.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Registry",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"IRetranslatingCondition",permalink:"/docs/api/CopperSharp.Predicates.Conditions/IRetranslatingCondition"},next:{title:"AdvancementRegistry",permalink:"/docs/api/CopperSharp.Registry/AdvancementRegistry"}},c=[{value:"Classes",id:"classes",children:[{value:"AdvancementRegistry",id:"advancementregistry",children:[],level:3},{value:"DisguiseRegistry",id:"disguiseregistry",children:[],level:3},{value:"FunctionRegistry",id:"functionregistry",children:[],level:3},{value:"Registries",id:"registries",children:[],level:3},{value:"Registry<TElement>",id:"registrytelement",children:[],level:3},{value:"TagRegistry",id:"tagregistry",children:[],level:3}],level:2},{value:"Structs",id:"structs",children:[{value:"Identifier",id:"identifier",children:[],level:3}],level:2}],u={toc:c};function g(e){var r=e.components,t=(0,n.Z)(e,s);return(0,a.kt)("wrapper",(0,i.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"namespace-coppersharpregistry"},"Namespace CopperSharp.Registry"),(0,a.kt)("h2",{id:"classes"},"Classes"),(0,a.kt)("h3",{id:"advancementregistry"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Registry/AdvancementRegistry"},"AdvancementRegistry")),(0,a.kt)("p",null,"Represents an advancement registry"),(0,a.kt)("h3",{id:"disguiseregistry"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Registry/DisguiseRegistry"},"DisguiseRegistry")),(0,a.kt)("p",null,"A global registry for disguises"),(0,a.kt)("h3",{id:"functionregistry"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Registry/FunctionRegistry"},"FunctionRegistry")),(0,a.kt)("p",null,"Represents a global function registry"),(0,a.kt)("h3",{id:"registries"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Registry/Registries"},"Registries")),(0,a.kt)("p",null,"Class, containing all global registries"),(0,a.kt)("h3",{id:"registrytelement"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Registry/Registry%60TElement%60"},"Registry","<","TElement",">")),(0,a.kt)("p",null,"An abstract super class for registries"),(0,a.kt)("h3",{id:"tagregistry"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Registry/TagRegistry"},"TagRegistry")),(0,a.kt)("p",null,"Represents a registry for tags"),(0,a.kt)("h2",{id:"structs"},"Structs"),(0,a.kt)("h3",{id:"identifier"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Registry/Identifier"},"Identifier")),(0,a.kt)("p",null,"A namespace:path pair, used to represent a lot of things, such as item ids, functions and more"))}g.isMDXComponent=!0}}]);