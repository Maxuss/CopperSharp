"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[74921],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return u}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=r.createContext({}),c=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(a),u=n,h=m["".concat(d,".").concat(u)]||m[u]||o[u]||i;return a?r.createElement(h,l(l({ref:t},s),{},{components:a})):r.createElement(h,l({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=m;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var c=2;c<i;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},39548:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var r=a(87462),n=a(63366),i=(a(67294),a(3905)),l=["components"],p={title:"Class DamagePredicate",sidebar_label:"DamagePredicate",description:"Represents a damage done predicate"},d="Class DamagePredicate",c={unversionedId:"api/CopperSharp.Advancements.Predicates/DamagePredicate",id:"api/CopperSharp.Advancements.Predicates/DamagePredicate",title:"Class DamagePredicate",description:"Represents a damage done predicate",source:"@site/docs/api/CopperSharp.Advancements.Predicates/DamagePredicate.md",sourceDirName:"api/CopperSharp.Advancements.Predicates",slug:"/api/CopperSharp.Advancements.Predicates/DamagePredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/DamagePredicate",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Advancements.Predicates/DamagePredicate.md",tags:[],version:"current",frontMatter:{title:"Class DamagePredicate",sidebar_label:"DamagePredicate",description:"Represents a damage done predicate"},sidebar:"tutorialSidebar",previous:{title:"BlockPredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/BlockPredicate"},next:{title:"DistancePredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/DistancePredicate"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"RequireBlocked(Boolean)",id:"requireblockedboolean",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"RequireDealt(StrictRange)",id:"requiredealtstrictrange",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"RequireTaken(StrictRange)",id:"requiretakenstrictrange",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3},{value:"DirectEntity(EntityPredicate)",id:"directentityentitypredicate",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-3",children:[],level:5}],level:3},{value:"SourceEntity(EntityPredicate)",id:"sourceentityentitypredicate",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-4",children:[],level:5},{value:"Parameters",id:"parameters-4",children:[],level:5}],level:3},{value:"BypassedArmor(Boolean)",id:"bypassedarmorboolean",children:[{value:"View Source",id:"view-source-6",children:[],level:6},{value:"Returns",id:"returns-5",children:[],level:5},{value:"Parameters",id:"parameters-5",children:[],level:5}],level:3},{value:"BypassedInvulnerability(Boolean)",id:"bypassedinvulnerabilityboolean",children:[{value:"View Source",id:"view-source-7",children:[],level:6},{value:"Returns",id:"returns-6",children:[],level:5},{value:"Parameters",id:"parameters-6",children:[],level:5}],level:3},{value:"BypassedMagic(Boolean)",id:"bypassedmagicboolean",children:[{value:"View Source",id:"view-source-8",children:[],level:6},{value:"Returns",id:"returns-7",children:[],level:5},{value:"Parameters",id:"parameters-7",children:[],level:5}],level:3},{value:"RequireExplosion(Boolean)",id:"requireexplosionboolean",children:[{value:"View Source",id:"view-source-9",children:[],level:6},{value:"Returns",id:"returns-8",children:[],level:5},{value:"Parameters",id:"parameters-8",children:[],level:5}],level:3},{value:"RequireFire(Boolean)",id:"requirefireboolean",children:[{value:"View Source",id:"view-source-10",children:[],level:6},{value:"Returns",id:"returns-9",children:[],level:5},{value:"Parameters",id:"parameters-9",children:[],level:5}],level:3},{value:"RequireMagic(Boolean)",id:"requiremagicboolean",children:[{value:"View Source",id:"view-source-11",children:[],level:6},{value:"Returns",id:"returns-10",children:[],level:5},{value:"Parameters",id:"parameters-10",children:[],level:5}],level:3},{value:"RequireProjectile(Boolean)",id:"requireprojectileboolean",children:[{value:"View Source",id:"view-source-12",children:[],level:6},{value:"Returns",id:"returns-11",children:[],level:5},{value:"Parameters",id:"parameters-11",children:[],level:5}],level:3},{value:"RequireLightning(Boolean)",id:"requirelightningboolean",children:[{value:"View Source",id:"view-source-13",children:[],level:6},{value:"Returns",id:"returns-12",children:[],level:5},{value:"Parameters",id:"parameters-12",children:[],level:5}],level:3},{value:"SerializeInto(JsonTextWriter)",id:"serializeintojsontextwriter",children:[{value:"View Source",id:"view-source-14",children:[],level:6},{value:"Returns",id:"returns-13",children:[],level:5},{value:"Parameters",id:"parameters-13",children:[],level:5}],level:3}],level:2}],o={toc:s};function m(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class-damagepredicate"},"Class DamagePredicate"),(0,i.kt)("p",null,"Represents a damage done predicate"),(0,i.kt)("h6",{id:"assembly-coppersharpdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L9"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class DamagePredicate : object\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"requireblockedboolean"},"RequireBlocked(Boolean)"),(0,i.kt)("p",null,"Requires this damage to be blocked"),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L22"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate RequireBlocked(bool block = true)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"block")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"requiredealtstrictrange"},"RequireDealt(StrictRange)"),(0,i.kt)("p",null,"Require certain amount of damage dealt before applying different calculations"),(0,i.kt)("h6",{id:"view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L33"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate RequireDealt(StrictRange amount)\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Utils/StrictRange"},"CopperSharp.Utils.StrictRange")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"amount")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Amount to be set")))),(0,i.kt)("h3",{id:"requiretakenstrictrange"},"RequireTaken(StrictRange)"),(0,i.kt)("p",null,"Require certain amount of damage dealt after applying different calculations"),(0,i.kt)("h6",{id:"view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L44"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate RequireTaken(StrictRange taken)\n")),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Utils/StrictRange"},"CopperSharp.Utils.StrictRange")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"taken")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Amount to be set")))),(0,i.kt)("h3",{id:"directentityentitypredicate"},"DirectEntity(EntityPredicate)"),(0,i.kt)("p",null,"Sets the direct cause of damage, e.g. ","<","strong",">","arrow","<","/strong",">"," that the skeleton shot"),(0,i.kt)("h6",{id:"view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L55"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate DirectEntity(EntityPredicate direct)\n")),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This damage predicate"),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Advancements.Predicates/EntityPredicate"},"CopperSharp.Advancements.Predicates.EntityPredicate")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"direct")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Entity to be set")))),(0,i.kt)("h3",{id:"sourceentityentitypredicate"},"SourceEntity(EntityPredicate)"),(0,i.kt)("p",null,"Sets the source cause of damage, e.g. ","<","strong",">","skeleton","<","/strong",">"," that shot the arrow"),(0,i.kt)("h6",{id:"view-source-5"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L66"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate SourceEntity(EntityPredicate source)\n")),(0,i.kt)("h5",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This damage predicate"),(0,i.kt)("h5",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Advancements.Predicates/EntityPredicate"},"CopperSharp.Advancements.Predicates.EntityPredicate")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"source")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Entity to be set")))),(0,i.kt)("h3",{id:"bypassedarmorboolean"},"BypassedArmor(Boolean)"),(0,i.kt)("p",null,"Requires this damage to bypass armor"),(0,i.kt)("h6",{id:"view-source-6"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L77"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate BypassedArmor(bool req = true)\n")),(0,i.kt)("h5",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"req")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"bypassedinvulnerabilityboolean"},"BypassedInvulnerability(Boolean)"),(0,i.kt)("p",null,"Requires this damage to bypass invulnerability"),(0,i.kt)("h6",{id:"view-source-7"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L88"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate BypassedInvulnerability(bool req = true)\n")),(0,i.kt)("h5",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"req")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"bypassedmagicboolean"},"BypassedMagic(Boolean)"),(0,i.kt)("p",null,"Requires this damage to bypass magic damage"),(0,i.kt)("h6",{id:"view-source-8"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L99"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate BypassedMagic(bool req = true)\n")),(0,i.kt)("h5",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"req")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"requireexplosionboolean"},"RequireExplosion(Boolean)"),(0,i.kt)("p",null,"Requires this damage to be explosion"),(0,i.kt)("h6",{id:"view-source-9"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L110"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate RequireExplosion(bool req = true)\n")),(0,i.kt)("h5",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"req")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"requirefireboolean"},"RequireFire(Boolean)"),(0,i.kt)("p",null,"Requires this damage to be fire"),(0,i.kt)("h6",{id:"view-source-10"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L121"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate RequireFire(bool req = true)\n")),(0,i.kt)("h5",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"req")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"requiremagicboolean"},"RequireMagic(Boolean)"),(0,i.kt)("p",null,"Requires this damage to be magic"),(0,i.kt)("h6",{id:"view-source-11"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L132"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate RequireMagic(bool req = true)\n")),(0,i.kt)("h5",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"req")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"requireprojectileboolean"},"RequireProjectile(Boolean)"),(0,i.kt)("p",null,"Requires this damage to be projectile damage"),(0,i.kt)("h6",{id:"view-source-12"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L143"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate RequireProjectile(bool req = true)\n")),(0,i.kt)("h5",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"req")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"requirelightningboolean"},"RequireLightning(Boolean)"),(0,i.kt)("p",null,"Requires this damage to be lightning"),(0,i.kt)("h6",{id:"view-source-13"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L154"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DamagePredicate RequireLightning(bool req = true)\n")),(0,i.kt)("h5",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"CopperSharp.Advancements.Predicates.DamagePredicate"),": This predicate"),(0,i.kt)("h5",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"req")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"serializeintojsontextwriter"},"SerializeInto(JsonTextWriter)"),(0,i.kt)("p",null,"Serializes this predicate into provided writer"),(0,i.kt)("h6",{id:"view-source-14"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DamagePredicate.cs#L164"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task SerializeInto(JsonTextWriter w)\n")),(0,i.kt)("h5",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Task")),(0,i.kt)("h5",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"JsonTextWriter")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"w")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Writer to be used")))))}m.isMDXComponent=!0}}]);