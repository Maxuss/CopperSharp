"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[37737],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),o=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),h=o(r),d=a,f=h["".concat(s,".").concat(d)]||h[d]||u[d]||i;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=h;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var o=2;o<i;o++)l[o]=r[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},34237:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return c},default:function(){return h}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),l=["components"],p={title:"Namespace CopperSharp.Utils",sidebar_label:"Index",sidebar_position:0},s="Namespace CopperSharp.Utils",o={unversionedId:"api/CopperSharp.Utils/CopperSharp.Utils",id:"api/CopperSharp.Utils/CopperSharp.Utils",title:"Namespace CopperSharp.Utils",description:"Classes",source:"@site/docs/api/CopperSharp.Utils/CopperSharp.Utils.md",sourceDirName:"api/CopperSharp.Utils",slug:"/api/CopperSharp.Utils/",permalink:"/docs/api/CopperSharp.Utils/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Utils/CopperSharp.Utils.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Utils",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"TranslatableComponent",permalink:"/docs/api/CopperSharp.Text/TranslatableComponent"},next:{title:"AnnotationUtils",permalink:"/docs/api/CopperSharp.Utils/AnnotationUtils"}},c=[{value:"Classes",id:"classes",children:[{value:"AnnotationUtils",id:"annotationutils",children:[],level:3},{value:"AsyncUtils",id:"asyncutils",children:[],level:3},{value:"ConcurrentList<T>",id:"concurrentlistt",children:[],level:3},{value:"EnchantDataAttribute",id:"enchantdataattribute",children:[],level:3},{value:"EnumDataAttribute",id:"enumdataattribute",children:[],level:3},{value:"Extensions",id:"extensions",children:[],level:3},{value:"FileUtils",id:"fileutils",children:[],level:3},{value:"MathUtils",id:"mathutils",children:[],level:3},{value:"ProgressBar",id:"progressbar",children:[],level:3}],level:2},{value:"Structs",id:"structs",children:[{value:"StrictRange",id:"strictrange",children:[],level:3},{value:"TypedVec2<TValue>",id:"typedvec2tvalue",children:[],level:3},{value:"Vec2",id:"vec2",children:[],level:3},{value:"Vec3",id:"vec3",children:[],level:3},{value:"Vec4<TValue>",id:"vec4tvalue",children:[],level:3}],level:2},{value:"Enums",id:"enums",children:[{value:"Keybind",id:"keybind",children:[],level:3},{value:"WoodType",id:"woodtype",children:[],level:3}],level:2}],u={toc:c};function h(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"namespace-coppersharputils"},"Namespace CopperSharp.Utils"),(0,i.kt)("h2",{id:"classes"},"Classes"),(0,i.kt)("h3",{id:"annotationutils"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/AnnotationUtils"},"AnnotationUtils")),(0,i.kt)("p",null,"Utils for annotation"),(0,i.kt)("h3",{id:"asyncutils"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/AsyncUtils"},"AsyncUtils")),(0,i.kt)("p",null,"Contains several utilities for async methods"),(0,i.kt)("h3",{id:"concurrentlistt"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/ConcurrentList%60T%60"},"ConcurrentList","<","T",">")),(0,i.kt)("p",null,"Represents a thread-safe list with several utility methods"),(0,i.kt)("h3",{id:"enchantdataattribute"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/EnchantDataAttribute"},"EnchantDataAttribute")),(0,i.kt)("p",null,"Attribute for enchant enum to store string data inside"),(0,i.kt)("h3",{id:"enumdataattribute"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/EnumDataAttribute"},"EnumDataAttribute")),(0,i.kt)("p",null,"Attribute for enum to store string data inside"),(0,i.kt)("h3",{id:"extensions"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/Extensions"},"Extensions")),(0,i.kt)("p",null,"A static class containing several extensions"),(0,i.kt)("h3",{id:"fileutils"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/FileUtils"},"FileUtils")),(0,i.kt)("p",null,"Some file-related utilities"),(0,i.kt)("h3",{id:"mathutils"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/MathUtils"},"MathUtils")),(0,i.kt)("p",null,"Different Math-related utilities"),(0,i.kt)("h3",{id:"progressbar"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/ProgressBar"},"ProgressBar")),(0,i.kt)("p",null,"An ASCII progress bar"),(0,i.kt)("h2",{id:"structs"},"Structs"),(0,i.kt)("h3",{id:"strictrange"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/StrictRange"},"StrictRange")),(0,i.kt)("p",null,"Represents a range of two values that can also a strict single value"),(0,i.kt)("h3",{id:"typedvec2tvalue"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/TypedVec2%60TValue%60"},"TypedVec2","<","TValue",">")),(0,i.kt)("p",null,"Represents a typed vector of 2 elements"),(0,i.kt)("h3",{id:"vec2"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/Vec2"},"Vec2")),(0,i.kt)("p",null,"Represents a rotation vector"),(0,i.kt)("h3",{id:"vec3"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/Vec3"},"Vec3")),(0,i.kt)("p",null,"Represents a motion vector"),(0,i.kt)("h3",{id:"vec4tvalue"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/Vec4%60TValue%60"},"Vec4","<","TValue",">")),(0,i.kt)("p",null,"Represents a vector of 4 elements"),(0,i.kt)("h2",{id:"enums"},"Enums"),(0,i.kt)("h3",{id:"keybind"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/Keybind"},"Keybind")),(0,i.kt)("p",null,"Represents an in-game keybind"),(0,i.kt)("h3",{id:"woodtype"},(0,i.kt)("a",{parentName:"h3",href:"../CopperSharp.Utils/WoodType"},"WoodType")),(0,i.kt)("p",null,"Represents type of wood"))}h.isMDXComponent=!0}}]);