"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[81832],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return d}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},h=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),h=p(t),d=o,m=h["".concat(l,".").concat(d)]||h[d]||s[d]||a;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=h;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},98121:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return h}});var n=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],c={title:"Enum StructureMirror",sidebar_label:"StructureMirror",description:"Type of structure&apos;s mirroring"},l="Enum StructureMirror",p={unversionedId:"api/CopperSharp.Blocks.State/StructureMirror",id:"api/CopperSharp.Blocks.State/StructureMirror",title:"Enum StructureMirror",description:"Type of structure&apos;s mirroring",source:"@site/docs/api/CopperSharp.Blocks.State/StructureMirror.md",sourceDirName:"api/CopperSharp.Blocks.State",slug:"/api/CopperSharp.Blocks.State/StructureMirror",permalink:"/docs/api/CopperSharp.Blocks.State/StructureMirror",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Blocks.State/StructureMirror.md",tags:[],version:"current",frontMatter:{title:"Enum StructureMirror",sidebar_label:"StructureMirror",description:"Type of structure&apos;s mirroring"},sidebar:"tutorialSidebar",previous:{title:"StructureBlockState",permalink:"/docs/api/CopperSharp.Blocks.State/StructureBlockState"},next:{title:"TrappedChestState",permalink:"/docs/api/CopperSharp.Blocks.State/TrappedChestState"}},u=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Fields",id:"fields",children:[{value:"None",id:"none",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"LeftRight",id:"leftright",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3},{value:"FrontBack",id:"frontback",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3}],level:2}],s={toc:u};function h(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"enum-structuremirror"},"Enum StructureMirror"),(0,a.kt)("p",null,"Type of structure","'","s mirroring"),(0,a.kt)("h6",{id:"assembly-coppersharpdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,a.kt)("h6",{id:"view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/State/StructureBlockState.cs#L210"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public enum StructureMirror : int\n")),(0,a.kt)("h2",{id:"fields"},"Fields"),(0,a.kt)("h3",{id:"none"},"None"),(0,a.kt)("p",null,"No mirroring"),(0,a.kt)("h6",{id:"view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/State/StructureBlockState.cs#L215"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"None = 0\n")),(0,a.kt)("h3",{id:"leftright"},"LeftRight"),(0,a.kt)("p",null,"Left-right mirroring"),(0,a.kt)("h6",{id:"view-source-2"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/State/StructureBlockState.cs#L220"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"LeftRight = 1\n")),(0,a.kt)("h3",{id:"frontback"},"FrontBack"),(0,a.kt)("p",null,"Front-back mirroring"),(0,a.kt)("h6",{id:"view-source-3"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/State/StructureBlockState.cs#L225"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"FrontBack = 2\n")))}h.isMDXComponent=!0}}]);