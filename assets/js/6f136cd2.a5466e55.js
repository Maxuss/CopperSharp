"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[69641],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var a=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function n(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var o=a.createContext({}),s=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,c=n(e,["components","mdxType","originalType","parentName"]),f=s(r),m=l,d=f["".concat(o,".").concat(m)]||f[m]||u[m]||i;return r?a.createElement(d,p(p({ref:t},c),{},{components:r})):a.createElement(d,p({ref:t},c))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=r.length,p=new Array(i);p[0]=f;var n={};for(var o in t)hasOwnProperty.call(t,o)&&(n[o]=t[o]);n.originalType=e,n.mdxType="string"==typeof e?e:l,p[1]=n;for(var s=2;s<i;s++)p[s]=r[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},33290:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return n},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return c},default:function(){return f}});var a=r(87462),l=r(63366),i=(r(67294),r(3905)),p=["components"],n={title:"Class BigDripleaf",sidebar_label:"BigDripleaf",description:"Represents a big drip leaf"},o="Class BigDripleaf",s={unversionedId:"api/CopperSharp.Blocks.Data.Impl/BigDripleaf",id:"api/CopperSharp.Blocks.Data.Impl/BigDripleaf",title:"Class BigDripleaf",description:"Represents a big drip leaf",source:"@site/docs/api/CopperSharp.Blocks.Data.Impl/BigDripleaf.md",sourceDirName:"api/CopperSharp.Blocks.Data.Impl",slug:"/api/CopperSharp.Blocks.Data.Impl/BigDripleaf",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/BigDripleaf",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Blocks.Data.Impl/BigDripleaf.md",tags:[],version:"current",frontMatter:{title:"Class BigDripleaf",sidebar_label:"BigDripleaf",description:"Represents a big drip leaf"},sidebar:"tutorialSidebar",previous:{title:"BigDripleaf.Tilt",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/BigDripleaf.Tilt"},next:{title:"BrewingStand",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/BrewingStand"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"Tilted(BigDripleaf.Tilt)",id:"tiltedbigdripleaftilt",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],u={toc:c};function f(e){var t=e.components,r=(0,l.Z)(e,p);return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class-bigdripleaf"},"Class BigDripleaf"),(0,i.kt)("p",null,"Represents a big drip leaf"),(0,i.kt)("h6",{id:"assembly-coppersharpdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/BigDripleaf.cs#L6"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class BigDripleaf : Dripleaf, IDirectional, IWaterlogged, IBlockData\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"tiltedbigdripleaftilt"},"Tilted(BigDripleaf.Tilt)"),(0,i.kt)("p",null,"Sets tilting of this dripleaf"),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/BigDripleaf.cs#L39"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public BigDripleaf Tilted(BigDripleaf.Tilt tilt)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Blocks.Data.Impl/BigDripleaf"},"CopperSharp.Blocks.Data.Impl.BigDripleaf"),": This big dripleaf"),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Blocks.Data.Impl/BigDripleaf.Tilt"},"CopperSharp.Blocks.Data.Impl.BigDripleaf.Tilt")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"tilt")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Type of tilt")))),(0,i.kt)("h2",{id:"implements"},"Implements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IDirectional"},"CopperSharp.Blocks.Data.IDirectional")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IWaterlogged"},"CopperSharp.Blocks.Data.IWaterlogged")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IBlockData"},"CopperSharp.Blocks.Data.IBlockData"))))}f.isMDXComponent=!0}}]);