"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[88905],{3905:function(t,e,r){r.d(e,{Zo:function(){return c},kt:function(){return d}});var a=r(67294);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function p(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,a,i=function(t,e){if(null==t)return{};var r,a,i={},n=Object.keys(t);for(a=0;a<n.length;a++)r=n[a],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(a=0;a<n.length;a++)r=n[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}var u=a.createContext({}),l=function(t){var e=a.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):p(p({},e),t)),r},c=function(t){var e=l(t.components);return a.createElement(u.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},b=a.forwardRef((function(t,e){var r=t.components,i=t.mdxType,n=t.originalType,u=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),b=l(r),d=i,h=b["".concat(u,".").concat(d)]||b[d]||s[d]||n;return r?a.createElement(h,p(p({ref:e},c),{},{components:r})):a.createElement(h,p({ref:e},c))}));function d(t,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var n=r.length,p=new Array(n);p[0]=b;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o.mdxType="string"==typeof t?t:i,p[1]=o;for(var l=2;l<n;l++)p[l]=r[l];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},93500:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return b}});var a=r(87462),i=r(63366),n=(r(67294),r(3905)),p=["components"],o={title:"Namespace CopperSharp.Data.Attributes",sidebar_label:"Index",sidebar_position:0},u="Namespace CopperSharp.Data.Attributes",l={unversionedId:"api/CopperSharp.Data.Attributes/CopperSharp.Data.Attributes",id:"api/CopperSharp.Data.Attributes/CopperSharp.Data.Attributes",title:"Namespace CopperSharp.Data.Attributes",description:"Structs",source:"@site/docs/api/CopperSharp.Data.Attributes/CopperSharp.Data.Attributes.md",sourceDirName:"api/CopperSharp.Data.Attributes",slug:"/api/CopperSharp.Data.Attributes/",permalink:"/docs/api/CopperSharp.Data.Attributes/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Data.Attributes/CopperSharp.Data.Attributes.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Data.Attributes",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"InteractHookContext",permalink:"/docs/api/CopperSharp.Contexts.Hooks/InteractHookContext"},next:{title:"AttributeAction",permalink:"/docs/api/CopperSharp.Data.Attributes/AttributeAction"}},c=[{value:"Structs",id:"structs",children:[{value:"AttributeModifier",id:"attributemodifier",children:[],level:3},{value:"FlyingEntityAttribute",id:"flyingentityattribute",children:[],level:3},{value:"GenericAttribute",id:"genericattribute",children:[],level:3},{value:"HorseAttribute",id:"horseattribute",children:[],level:3},{value:"PlayerAttribute",id:"playerattribute",children:[],level:3},{value:"ZombieAttribute",id:"zombieattribute",children:[],level:3}],level:2},{value:"Interfaces",id:"interfaces",children:[{value:"IAttributeType",id:"iattributetype",children:[],level:3}],level:2},{value:"Enums",id:"enums",children:[{value:"AttributeAction",id:"attributeaction",children:[],level:3}],level:2}],s={toc:c};function b(t){var e=t.components,r=(0,i.Z)(t,p);return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"namespace-coppersharpdataattributes"},"Namespace CopperSharp.Data.Attributes"),(0,n.kt)("h2",{id:"structs"},"Structs"),(0,n.kt)("h3",{id:"attributemodifier"},(0,n.kt)("a",{parentName:"h3",href:"../CopperSharp.Data.Attributes/AttributeModifier"},"AttributeModifier")),(0,n.kt)("p",null,"An attribute modifier, containing a type and a modifier"),(0,n.kt)("h3",{id:"flyingentityattribute"},(0,n.kt)("a",{parentName:"h3",href:"../CopperSharp.Data.Attributes/FlyingEntityAttribute"},"FlyingEntityAttribute")),(0,n.kt)("p",null,"Represents an attribute, only applicable to bees and parrots"),(0,n.kt)("h3",{id:"genericattribute"},(0,n.kt)("a",{parentName:"h3",href:"../CopperSharp.Data.Attributes/GenericAttribute"},"GenericAttribute")),(0,n.kt)("p",null,"Represents a generic attribute"),(0,n.kt)("h3",{id:"horseattribute"},(0,n.kt)("a",{parentName:"h3",href:"../CopperSharp.Data.Attributes/HorseAttribute"},"HorseAttribute")),(0,n.kt)("p",null,"Represents attributes, only applicable to horses"),(0,n.kt)("h3",{id:"playerattribute"},(0,n.kt)("a",{parentName:"h3",href:"../CopperSharp.Data.Attributes/PlayerAttribute"},"PlayerAttribute")),(0,n.kt)("p",null,"Represents attribute type applicable only to players"),(0,n.kt)("h3",{id:"zombieattribute"},(0,n.kt)("a",{parentName:"h3",href:"../CopperSharp.Data.Attributes/ZombieAttribute"},"ZombieAttribute")),(0,n.kt)("p",null,"Represents an attribute, only applicable to zombies"),(0,n.kt)("h2",{id:"interfaces"},"Interfaces"),(0,n.kt)("h3",{id:"iattributetype"},(0,n.kt)("a",{parentName:"h3",href:"../CopperSharp.Data.Attributes/IAttributeType"},"IAttributeType")),(0,n.kt)("p",null,"A global interface for attribute types.","<","br /",">","\nTo get static attribute values, check","<","br /",">","\nimplementations below:"),(0,n.kt)("h2",{id:"enums"},"Enums"),(0,n.kt)("h3",{id:"attributeaction"},(0,n.kt)("a",{parentName:"h3",href:"../CopperSharp.Data.Attributes/AttributeAction"},"AttributeAction")),(0,n.kt)("p",null,"Represents an action to be done with an attribute"))}b.isMDXComponent=!0}}]);