"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[49793],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return b}});var a=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,a,o=function(e,r){if(null==e)return{};var t,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),s=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=s(e.components);return a.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(t),b=o,h=m["".concat(i,".").concat(b)]||m[b]||u[b]||n;return t?a.createElement(h,l(l({ref:r},c),{},{components:t})):a.createElement(h,l({ref:r},c))}));function b(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var n=t.length,l=new Array(n);l[0]=m;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var s=2;s<n;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},25353:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return p},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var a=t(87462),o=t(63366),n=(t(67294),t(3905)),l=["components"],p={title:"Enum Bamboo.Leaves",sidebar_label:"Bamboo.Leaves",description:"Represents type of bamboo leaves"},i="Enum Bamboo.Leaves",s={unversionedId:"api/CopperSharp.Blocks.Data.Impl/Bamboo.Leaves",id:"api/CopperSharp.Blocks.Data.Impl/Bamboo.Leaves",title:"Enum Bamboo.Leaves",description:"Represents type of bamboo leaves",source:"@site/docs/api/CopperSharp.Blocks.Data.Impl/Bamboo.Leaves.md",sourceDirName:"api/CopperSharp.Blocks.Data.Impl",slug:"/api/CopperSharp.Blocks.Data.Impl/Bamboo.Leaves",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/Bamboo.Leaves",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Blocks.Data.Impl/Bamboo.Leaves.md",tags:[],version:"current",frontMatter:{title:"Enum Bamboo.Leaves",sidebar_label:"Bamboo.Leaves",description:"Represents type of bamboo leaves"},sidebar:"tutorialSidebar",previous:{title:"AmethystCluster",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/AmethystCluster"},next:{title:"Bamboo",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/Bamboo"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Fields",id:"fields",children:[{value:"None",id:"none",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"Small",id:"small",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3},{value:"Large",id:"large",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3}],level:2}],u={toc:c};function m(e){var r=e.components,t=(0,o.Z)(e,l);return(0,n.kt)("wrapper",(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"enum-bambooleaves"},"Enum Bamboo.Leaves"),(0,n.kt)("p",null,"Represents type of bamboo leaves"),(0,n.kt)("h6",{id:"assembly-coppersharpdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/Bamboo.cs#L11"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public enum Leaves : int\n")),(0,n.kt)("h2",{id:"fields"},"Fields"),(0,n.kt)("h3",{id:"none"},"None"),(0,n.kt)("p",null,"Bamboo has no leaves"),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/Bamboo.cs#L16"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"None = 0\n")),(0,n.kt)("h3",{id:"small"},"Small"),(0,n.kt)("p",null,"Bamboo has small leaves"),(0,n.kt)("h6",{id:"view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/Bamboo.cs#L21"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Small = 1\n")),(0,n.kt)("h3",{id:"large"},"Large"),(0,n.kt)("p",null,"Bamboo has big leaves"),(0,n.kt)("h6",{id:"view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/Bamboo.cs#L26"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Large = 2\n")))}m.isMDXComponent=!0}}]);