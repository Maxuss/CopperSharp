"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[88375],{3905:function(e,r,t){t.d(r,{Zo:function(){return i},kt:function(){return m}});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?p(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},p=Object.keys(e);for(a=0;a<p.length;a++)t=p[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)t=p[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),c=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},i=function(e){var r=c(e.components);return a.createElement(s.Provider,{value:r},e.children)},h={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,p=e.originalType,s=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=n,d=u["".concat(s,".").concat(m)]||u[m]||h[m]||p;return t?a.createElement(d,o(o({ref:r},i),{},{components:t})):a.createElement(d,o({ref:r},i))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var p=t.length,o=new Array(p);o[0]=u;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<p;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},31014:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return i},default:function(){return u}});var a=t(87462),n=t(63366),p=(t(67294),t(3905)),o=["components"],l={title:"Class RespawnAnchor",sidebar_label:"RespawnAnchor",description:"Represents a respawn anchor"},s="Class RespawnAnchor",c={unversionedId:"api/CopperSharp.Blocks.Data.Impl/RespawnAnchor",id:"api/CopperSharp.Blocks.Data.Impl/RespawnAnchor",title:"Class RespawnAnchor",description:"Represents a respawn anchor",source:"@site/docs/api/CopperSharp.Blocks.Data.Impl/RespawnAnchor.md",sourceDirName:"api/CopperSharp.Blocks.Data.Impl",slug:"/api/CopperSharp.Blocks.Data.Impl/RespawnAnchor",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/RespawnAnchor",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Blocks.Data.Impl/RespawnAnchor.md",tags:[],version:"current",frontMatter:{title:"Class RespawnAnchor",sidebar_label:"RespawnAnchor",description:"Represents a respawn anchor"},sidebar:"tutorialSidebar",previous:{title:"Repeater",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/Repeater"},next:{title:"Sapling",permalink:"/docs/api/CopperSharp.Blocks.Data.Impl/Sapling"}},i=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"Charges(Int32)",id:"chargesint32",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],h={toc:i};function u(e){var r=e.components,t=(0,n.Z)(e,o);return(0,p.kt)("wrapper",(0,a.Z)({},h,t,{components:r,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"class-respawnanchor"},"Class RespawnAnchor"),(0,p.kt)("p",null,"Represents a respawn anchor"),(0,p.kt)("h6",{id:"assembly-coppersharpdll"},(0,p.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,p.kt)("h6",{id:"view-source"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/RespawnAnchor.cs#L6"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class RespawnAnchor : AbstractBlockData, IBlockData\n")),(0,p.kt)("h2",{id:"methods"},"Methods"),(0,p.kt)("h3",{id:"chargesint32"},"Charges(Int32)"),(0,p.kt)("p",null,"Sets amount of charges are left in this respawn anchor"),(0,p.kt)("h6",{id:"view-source-1"},(0,p.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Blocks/Data/Impl/RespawnAnchor.cs#L13"},"View Source")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public RespawnAnchor Charges(int charges)\n")),(0,p.kt)("h5",{id:"returns"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"../CopperSharp.Blocks.Data.Impl/RespawnAnchor"},"CopperSharp.Blocks.Data.Impl.RespawnAnchor"),": This respawn anchor"),(0,p.kt)("h5",{id:"parameters"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"System.Int32")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("em",{parentName:"td"},"charges")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Amount of charges in range of 0 to 4")))),(0,p.kt)("h2",{id:"implements"},"Implements"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"../CopperSharp.Blocks.Data/IBlockData"},"CopperSharp.Blocks.Data.IBlockData"))))}u.isMDXComponent=!0}}]);