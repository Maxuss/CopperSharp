"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[31374],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},o=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),o=c(a),u=n,h=o["".concat(p,".").concat(u)]||o[u]||m[u]||l;return a?r.createElement(h,i(i({ref:t},d),{},{components:a})):r.createElement(h,i({ref:t},d))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=o;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<l;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}o.displayName="MDXCreateElement"},87208:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return o}});var r=a(87462),n=a(63366),l=(a(67294),a(3905)),i=["components"],s={title:"Struct DistancePredicate",sidebar_label:"DistancePredicate",description:"Represents a distance predicate"},p="Struct DistancePredicate",c={unversionedId:"api/CopperSharp.Advancements.Predicates/DistancePredicate",id:"api/CopperSharp.Advancements.Predicates/DistancePredicate",title:"Struct DistancePredicate",description:"Represents a distance predicate",source:"@site/docs/api/CopperSharp.Advancements.Predicates/DistancePredicate.md",sourceDirName:"api/CopperSharp.Advancements.Predicates",slug:"/api/CopperSharp.Advancements.Predicates/DistancePredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/DistancePredicate",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Advancements.Predicates/DistancePredicate.md",tags:[],version:"current",frontMatter:{title:"Struct DistancePredicate",sidebar_label:"DistancePredicate",description:"Represents a distance predicate"},sidebar:"tutorialSidebar",previous:{title:"DamagePredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/DamagePredicate"},next:{title:"EffectPredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/EffectPredicate"}},d=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"Absolute(Nullable&lt;Single&gt;, Nullable&lt;Single&gt;)",id:"absolutenullablesingle-nullablesingle",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"HorizontalDistance(Nullable&lt;Single&gt;, Nullable&lt;Single&gt;)",id:"horizontaldistancenullablesingle-nullablesingle",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"DistanceX(Nullable&lt;Single&gt;, Nullable&lt;Single&gt;)",id:"distancexnullablesingle-nullablesingle",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3},{value:"DistanceY(Nullable&lt;Single&gt;, Nullable&lt;Single&gt;)",id:"distanceynullablesingle-nullablesingle",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-3",children:[],level:5}],level:3},{value:"DistanceZ(Nullable&lt;Single&gt;, Nullable&lt;Single&gt;)",id:"distanceznullablesingle-nullablesingle",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-4",children:[],level:5},{value:"Parameters",id:"parameters-4",children:[],level:5}],level:3},{value:"SerializeInto(JsonTextWriter)",id:"serializeintojsontextwriter",children:[{value:"View Source",id:"view-source-6",children:[],level:6},{value:"Returns",id:"returns-5",children:[],level:5},{value:"Parameters",id:"parameters-5",children:[],level:5}],level:3}],level:2}],m={toc:d};function o(e){var t=e.components,a=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"struct-distancepredicate"},"Struct DistancePredicate"),(0,l.kt)("p",null,"Represents a distance predicate"),(0,l.kt)("h6",{id:"assembly-coppersharpdll"},(0,l.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,l.kt)("h6",{id:"view-source"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DistancePredicate.cs#L8"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public struct DistancePredicate\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"absolutenullablesingle-nullablesingle"},"Absolute(Nullable","<","Single",">",", Nullable","<","Single",">",")"),(0,l.kt)("p",null,"Sets absolute distance"),(0,l.kt)("h6",{id:"view-source-1"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DistancePredicate.cs#L18"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DistancePredicate Absolute(float? max = null, float? min = null)\n")),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DistancePredicate"},"CopperSharp.Advancements.Predicates.DistancePredicate"),": This distance predicate"),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"max")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Max distance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"min")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Min distance")))),(0,l.kt)("h3",{id:"horizontaldistancenullablesingle-nullablesingle"},"HorizontalDistance(Nullable","<","Single",">",", Nullable","<","Single",">",")"),(0,l.kt)("p",null,"Sets horizontal distance"),(0,l.kt)("h6",{id:"view-source-2"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DistancePredicate.cs#L30"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DistancePredicate HorizontalDistance(float? max = null, float? min = null)\n")),(0,l.kt)("h5",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DistancePredicate"},"CopperSharp.Advancements.Predicates.DistancePredicate"),": This distance predicate"),(0,l.kt)("h5",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"max")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Max distance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"min")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Min distance")))),(0,l.kt)("h3",{id:"distancexnullablesingle-nullablesingle"},"DistanceX(Nullable","<","Single",">",", Nullable","<","Single",">",")"),(0,l.kt)("p",null,"Sets X axis distance"),(0,l.kt)("h6",{id:"view-source-3"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DistancePredicate.cs#L42"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DistancePredicate DistanceX(float? max = null, float? min = null)\n")),(0,l.kt)("h5",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DistancePredicate"},"CopperSharp.Advancements.Predicates.DistancePredicate"),": This distance predicate"),(0,l.kt)("h5",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"max")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Max distance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"min")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Min distance")))),(0,l.kt)("h3",{id:"distanceynullablesingle-nullablesingle"},"DistanceY(Nullable","<","Single",">",", Nullable","<","Single",">",")"),(0,l.kt)("p",null,"Sets Y axis distance"),(0,l.kt)("h6",{id:"view-source-4"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DistancePredicate.cs#L54"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DistancePredicate DistanceY(float? max = null, float? min = null)\n")),(0,l.kt)("h5",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DistancePredicate"},"CopperSharp.Advancements.Predicates.DistancePredicate"),": This distance predicate"),(0,l.kt)("h5",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"max")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Max distance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"min")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Min distance")))),(0,l.kt)("h3",{id:"distanceznullablesingle-nullablesingle"},"DistanceZ(Nullable","<","Single",">",", Nullable","<","Single",">",")"),(0,l.kt)("p",null,"Sets Z axis distance"),(0,l.kt)("h6",{id:"view-source-5"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DistancePredicate.cs#L66"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DistancePredicate DistanceZ(float? max = null, float? min = null)\n")),(0,l.kt)("h5",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/DistancePredicate"},"CopperSharp.Advancements.Predicates.DistancePredicate"),": This distance"),(0,l.kt)("h5",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"max")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Max distance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Single>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"min")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Min distance")))),(0,l.kt)("h3",{id:"serializeintojsontextwriter"},"SerializeInto(JsonTextWriter)"),(0,l.kt)("p",null,"Serializes this distance predicate into provided writer"),(0,l.kt)("h6",{id:"view-source-6"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/DistancePredicate.cs#L76"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task SerializeInto(JsonTextWriter jw)\n")),(0,l.kt)("h5",{id:"returns-5"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Task")),(0,l.kt)("h5",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"JsonTextWriter")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"jw")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Writer to be used")))))}o.isMDXComponent=!0}}]);