"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[26408],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return b}});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=i.createContext({}),p=function(e){var t=i.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return i.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),b=n,h=d["".concat(u,".").concat(b)]||d[b]||s[b]||a;return r?i.createElement(h,o(o({ref:t},c),{},{components:r})):i.createElement(h,o({ref:t},c))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var p=2;p<a;p++)o[p]=r[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6952:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var i=r(87462),n=r(63366),a=(r(67294),r(3905)),o=["components"],l={title:"Enum AttributeAction",sidebar_label:"AttributeAction",description:"Represents an action to be done with an attribute"},u="Enum AttributeAction",p={unversionedId:"api/CopperSharp.Data.Attributes/AttributeAction",id:"api/CopperSharp.Data.Attributes/AttributeAction",title:"Enum AttributeAction",description:"Represents an action to be done with an attribute",source:"@site/docs/api/CopperSharp.Data.Attributes/AttributeAction.md",sourceDirName:"api/CopperSharp.Data.Attributes",slug:"/api/CopperSharp.Data.Attributes/AttributeAction",permalink:"/docs/api/CopperSharp.Data.Attributes/AttributeAction",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Data.Attributes/AttributeAction.md",tags:[],version:"current",frontMatter:{title:"Enum AttributeAction",sidebar_label:"AttributeAction",description:"Represents an action to be done with an attribute"},sidebar:"tutorialSidebar",previous:{title:"Index",permalink:"/docs/api/CopperSharp.Data.Attributes/"},next:{title:"AttributeModifier",permalink:"/docs/api/CopperSharp.Data.Attributes/AttributeModifier"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Fields",id:"fields",children:[{value:"Add",id:"add",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"MultiplyBase",id:"multiplybase",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3},{value:"Multiply",id:"multiply",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3}],level:2}],s={toc:c};function d(e){var t=e.components,r=(0,n.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"enum-attributeaction"},"Enum AttributeAction"),(0,a.kt)("p",null,"Represents an action to be done with an attribute"),(0,a.kt)("h6",{id:"assembly-coppersharpdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,a.kt)("h6",{id:"view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Data/Attributes/AttributeAction.cs#L6"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public enum AttributeAction : int\n")),(0,a.kt)("h2",{id:"fields"},"Fields"),(0,a.kt)("h3",{id:"add"},"Add"),(0,a.kt)("p",null,"Adds positive and subtracts negative value","<","br /",">","\nFrom attribute value amount"),(0,a.kt)("h6",{id:"view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Data/Attributes/AttributeAction.cs#L12"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Add = null\n")),(0,a.kt)("h3",{id:"multiplybase"},"MultiplyBase"),(0,a.kt)("p",null,"Multiplies the current value of the attribute by","<","br /",">","\n",(0,a.kt)("inlineCode",{parentName:"p"},"(1 + x)"),", where x is the sum of the modifiers","'"," amounts"),(0,a.kt)("h6",{id:"view-source-2"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Data/Attributes/AttributeAction.cs#L18"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"MultiplyBase = null\n")),(0,a.kt)("h3",{id:"multiply"},"Multiply"),(0,a.kt)("p",null,"For every modifier, multiplies the current value","<","br /",">","\nof the attribute by ",(0,a.kt)("inlineCode",{parentName:"p"},"(1 + x)"),", where x is the amount","<","br /",">","\nof the particular modifier"),(0,a.kt)("h6",{id:"view-source-3"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Data/Attributes/AttributeAction.cs#L25"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Multiply = null\n")))}d.isMDXComponent=!0}}]);