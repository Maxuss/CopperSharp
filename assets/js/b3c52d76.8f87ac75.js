"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[42030],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return u}});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=a.createContext({}),s=function(e){var r=a.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=s(e.components);return a.createElement(o.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(t),u=n,g=m["".concat(o,".").concat(u)]||m[u]||d[u]||i;return t?a.createElement(g,l(l({ref:r},c),{},{components:t})):a.createElement(g,l({ref:r},c))}));function u(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=m;var p={};for(var o in r)hasOwnProperty.call(r,o)&&(p[o]=r[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},35689:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var a=t(87462),n=t(63366),i=(t(67294),t(3905)),l=["components"],p={title:"Class CuredZombieVillager",sidebar_label:"CuredZombieVillager",description:"Triggers when the player cures a zombie villager"},o="Class CuredZombieVillager",s={unversionedId:"api/CopperSharp.Advancements.Triggers/CuredZombieVillager",id:"api/CopperSharp.Advancements.Triggers/CuredZombieVillager",title:"Class CuredZombieVillager",description:"Triggers when the player cures a zombie villager",source:"@site/docs/api/CopperSharp.Advancements.Triggers/CuredZombieVillager.md",sourceDirName:"api/CopperSharp.Advancements.Triggers",slug:"/api/CopperSharp.Advancements.Triggers/CuredZombieVillager",permalink:"/docs/api/CopperSharp.Advancements.Triggers/CuredZombieVillager",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Advancements.Triggers/CuredZombieVillager.md",tags:[],version:"current",frontMatter:{title:"Class CuredZombieVillager",sidebar_label:"CuredZombieVillager",description:"Triggers when the player cures a zombie villager"},sidebar:"tutorialSidebar",previous:{title:"ConsumeItem",permalink:"/docs/api/CopperSharp.Advancements.Triggers/ConsumeItem"},next:{title:"EffectChanged",permalink:"/docs/api/CopperSharp.Advancements.Triggers/EffectChanged"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"Villager(EntityPredicate)",id:"villagerentitypredicate",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"Zombie(EntityPredicate)",id:"zombieentitypredicate",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3}],level:2}],d={toc:c};function m(e){var r=e.components,t=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class-curedzombievillager"},"Class CuredZombieVillager"),(0,i.kt)("p",null,"Triggers when the player cures a zombie villager"),(0,i.kt)("h6",{id:"assembly-coppersharpdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Triggers/CuredZombieVillager.cs#L8"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class CuredZombieVillager : TriggerCondition\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"villagerentitypredicate"},"Villager(EntityPredicate)"),(0,i.kt)("p",null,"Sets the villager that was converted from zombie"),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Triggers/CuredZombieVillager.cs#L16"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public CuredZombieVillager Villager(EntityPredicate entity)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Triggers/CuredZombieVillager"},"CopperSharp.Advancements.Triggers.CuredZombieVillager"),": This trigger"),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Advancements.Predicates/EntityPredicate"},"CopperSharp.Advancements.Predicates.EntityPredicate")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"entity")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Villager to be set")))),(0,i.kt)("h3",{id:"zombieentitypredicate"},"Zombie(EntityPredicate)"),(0,i.kt)("p",null,"Sets the zombie that was cured"),(0,i.kt)("h6",{id:"view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Triggers/CuredZombieVillager.cs#L27"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public CuredZombieVillager Zombie(EntityPredicate entity)\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Triggers/CuredZombieVillager"},"CopperSharp.Advancements.Triggers.CuredZombieVillager"),": This trigger"),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Advancements.Predicates/EntityPredicate"},"CopperSharp.Advancements.Predicates.EntityPredicate")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"entity")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Zombie to be set")))))}m.isMDXComponent=!0}}]);