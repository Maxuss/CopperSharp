"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[82242],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return u}});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),d=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=d(r),u=n,h=m["".concat(l,".").concat(u)]||m[u]||s[u]||a;return r?i.createElement(h,o(o({ref:t},c),{},{components:r})):i.createElement(h,o({ref:t},c))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var d=2;d<a;d++)o[d]=r[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},31368:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return m}});var i=r(87462),n=r(63366),a=(r(67294),r(3905)),o=["components"],p={title:"Class ItemConditionProvider",sidebar_label:"ItemConditionProvider",description:"A provider which can supply item related condition"},l="Class ItemConditionProvider",d={unversionedId:"api/CopperSharp.Predicates/ItemConditionProvider",id:"api/CopperSharp.Predicates/ItemConditionProvider",title:"Class ItemConditionProvider",description:"A provider which can supply item related condition",source:"@site/docs/api/CopperSharp.Predicates/ItemConditionProvider.md",sourceDirName:"api/CopperSharp.Predicates",slug:"/api/CopperSharp.Predicates/ItemConditionProvider",permalink:"/docs/api/CopperSharp.Predicates/ItemConditionProvider",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Predicates/ItemConditionProvider.md",tags:[],version:"current",frontMatter:{title:"Class ItemConditionProvider",sidebar_label:"ItemConditionProvider",description:"A provider which can supply item related condition"},sidebar:"tutorialSidebar",previous:{title:"IConditionProvider",permalink:"/docs/api/CopperSharp.Predicates/IConditionProvider"},next:{title:"Index",permalink:"/docs/api/CopperSharp.Predicates.Conditions/"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"World",id:"world",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"Identical(ItemStack)",id:"identicalitemstack",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"TestPredicate(Identifier)",id:"testpredicateidentifier",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],s={toc:c};function m(e){var t=e.components,r=(0,n.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"class-itemconditionprovider"},"Class ItemConditionProvider"),(0,a.kt)("p",null,"A provider which can supply item related condition"),(0,a.kt)("h6",{id:"assembly-coppersharpdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,a.kt)("h6",{id:"view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Predicates/ItemConditionProvider.cs#L13"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class ItemConditionProvider : object, IWorldReference, IContext\n")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"world"},"World"),(0,a.kt)("p",null,"Represents the current world context"),(0,a.kt)("h6",{id:"view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Predicates/ItemConditionProvider.cs#L16"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public WorldContext World { get; }\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"identicalitemstack"},"Identical(ItemStack)"),(0,a.kt)("p",null,"Checks if this item is identical to provided item"),(0,a.kt)("h6",{id:"view-source-2"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Predicates/ItemConditionProvider.cs#L30"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ICondition Identical(ItemStack other)\n")),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../CopperSharp.Predicates.Conditions/ICondition"},"CopperSharp.Predicates.Conditions.ICondition"),": Identity condition"),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"../CopperSharp.Item/ItemStack"},"CopperSharp.Item.ItemStack")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("em",{parentName:"td"},"other")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Item to be tested against")))),(0,a.kt)("h3",{id:"testpredicateidentifier"},"TestPredicate(Identifier)"),(0,a.kt)("p",null,"Checks provided predicate on this item"),(0,a.kt)("h6",{id:"view-source-3"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Predicates/ItemConditionProvider.cs#L44"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ICondition TestPredicate(Identifier predicate)\n")),(0,a.kt)("h5",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../CopperSharp.Predicates.Conditions/ICondition"},"CopperSharp.Predicates.Conditions.ICondition"),": Predicate condition"),(0,a.kt)("h5",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"../CopperSharp.Registry/Identifier"},"CopperSharp.Registry.Identifier")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("em",{parentName:"td"},"predicate")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Predicate to be used")))),(0,a.kt)("h2",{id:"implements"},"Implements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../CopperSharp.Contexts/IWorldReference"},"CopperSharp.Contexts.IWorldReference")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../CopperSharp.Contexts/IContext"},"CopperSharp.Contexts.IContext"))))}m.isMDXComponent=!0}}]);