"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[71402],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return m}});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=a.createContext({}),p=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=p(e.components);return a.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=n,h=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return t?a.createElement(h,s(s({ref:r},c),{},{components:t})):a.createElement(h,s({ref:r},c))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=d;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var p=2;p<o;p++)s[p]=t[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},13093:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var a=t(87462),n=t(63366),o=(t(67294),t(3905)),s=["components"],l={title:"Class ProgressBar",sidebar_label:"ProgressBar",description:"An ASCII progress bar"},i="Class ProgressBar",p={unversionedId:"api/CopperSharp.Utils/ProgressBar",id:"api/CopperSharp.Utils/ProgressBar",title:"Class ProgressBar",description:"An ASCII progress bar",source:"@site/docs/api/CopperSharp.Utils/ProgressBar.md",sourceDirName:"api/CopperSharp.Utils",slug:"/api/CopperSharp.Utils/ProgressBar",permalink:"/docs/api/CopperSharp.Utils/ProgressBar",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Utils/ProgressBar.md",tags:[],version:"current",frontMatter:{title:"Class ProgressBar",sidebar_label:"ProgressBar",description:"An ASCII progress bar"},sidebar:"tutorialSidebar",previous:{title:"MathUtils",permalink:"/docs/api/CopperSharp.Utils/MathUtils"},next:{title:"StrictRange",permalink:"/docs/api/CopperSharp.Utils/StrictRange"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"Dispose()",id:"dispose",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"Report(Double)",id:"reportdouble",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Parameters",id:"parameters",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],u={toc:c};function d(e){var r=e.components,t=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"class-progressbar"},"Class ProgressBar"),(0,o.kt)("p",null,"An ASCII progress bar"),(0,o.kt)("h6",{id:"assembly-coppersharpdll"},(0,o.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,o.kt)("h6",{id:"view-source"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ProgressBar.cs#L8"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class ProgressBar : IDisposable, IProgress<double>\n")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"dispose"},"Dispose()"),(0,o.kt)("p",null,"Disposes this progress bar"),(0,o.kt)("h6",{id:"view-source-1"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ProgressBar.cs#L37"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Dispose()\n")),(0,o.kt)("h3",{id:"reportdouble"},"Report(Double)"),(0,o.kt)("p",null,"Reports progress for this bar"),(0,o.kt)("h6",{id:"view-source-2"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/ProgressBar.cs#L51"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Report(double value)\n")),(0,o.kt)("h5",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"System.Double")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"value")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Progress to be reported")))),(0,o.kt)("h2",{id:"implements"},"Implements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"IProgress<System.Double>"))))}d.isMDXComponent=!0}}]);