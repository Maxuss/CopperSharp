"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[91167],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),m=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=m(r),d=n,h=u["".concat(o,".").concat(d)]||u[d]||c[d]||l;return r?a.createElement(h,i(i({ref:t},s),{},{components:r})):a.createElement(h,i({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var m=2;m<l;m++)i[m]=r[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},78644:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return m},toc:function(){return s},default:function(){return u}});var a=r(87462),n=r(63366),l=(r(67294),r(3905)),i=["components"],p={title:"Class Inventory",sidebar_label:"Inventory",description:"Represents an inventory"},o="Class Inventory",m={unversionedId:"api/CopperSharp.Item/Inventory",id:"api/CopperSharp.Item/Inventory",title:"Class Inventory",description:"Represents an inventory",source:"@site/docs/api/CopperSharp.Item/Inventory.md",sourceDirName:"api/CopperSharp.Item",slug:"/api/CopperSharp.Item/Inventory",permalink:"/docs/api/CopperSharp.Item/Inventory",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Item/Inventory.md",tags:[],version:"current",frontMatter:{title:"Class Inventory",sidebar_label:"Inventory",description:"Represents an inventory"},sidebar:"tutorialSidebar",previous:{title:"IStack",permalink:"/docs/api/CopperSharp.Item/IStack"},next:{title:"ItemFlag",permalink:"/docs/api/CopperSharp.Item/ItemFlag"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"MaxSize",id:"maxsize",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"GetEnumerator()",id:"getenumerator",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5}],level:3},{value:"AddItem(Nullable&lt;ItemStack&gt;)",id:"additemnullableitemstack",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"SetItem(Nullable&lt;ItemStack&gt;, Int32)",id:"setitemnullableitemstack-int32",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"RemoveItem(Int32)",id:"removeitemint32",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3},{value:"WipeItem(Int32)",id:"wipeitemint32",children:[{value:"View Source",id:"view-source-6",children:[],level:6},{value:"Returns",id:"returns-4",children:[],level:5},{value:"Parameters",id:"parameters-3",children:[],level:5}],level:3},{value:"SerializeInto(INbtWriter, Boolean)",id:"serializeintoinbtwriter-boolean",children:[{value:"View Source",id:"view-source-7",children:[],level:6},{value:"Returns",id:"returns-5",children:[],level:5},{value:"Parameters",id:"parameters-4",children:[],level:5}],level:3}],level:2}],c={toc:s};function u(e){var t=e.components,r=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"class-inventory"},"Class Inventory"),(0,l.kt)("p",null,"Represents an inventory"),(0,l.kt)("h6",{id:"assembly-coppersharpdll"},(0,l.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,l.kt)("h6",{id:"view-source"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Item/Inventory.cs#L9"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract class Inventory : IEnumerable<(ItemStack? , int)>\n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"maxsize"},"MaxSize"),(0,l.kt)("p",null,"Max amount of items in this inventory"),(0,l.kt)("h6",{id:"view-source-1"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Item/Inventory.cs#L14"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected abstract int MaxSize { get; }\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"getenumerator"},"GetEnumerator()"),(0,l.kt)("h6",{id:"view-source-2"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Item/Inventory.cs#L19"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IEnumerator<(ItemStack? , int)> GetEnumerator()\n")),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"IEnumerator<System.ValueTuple<System.Nullable<CopperSharp.Item.ItemStack>,System.Int32>>")),(0,l.kt)("h3",{id:"additemnullableitemstack"},"AddItem(Nullable","<","ItemStack",">",")"),(0,l.kt)("p",null,"Adds an item to the next free slot"),(0,l.kt)("h6",{id:"view-source-3"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Item/Inventory.cs#L34"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Inventory AddItem(ItemStack? item)\n")),(0,l.kt)("h5",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Item/Inventory"},"CopperSharp.Item.Inventory"),": This inventory"),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<CopperSharp.Item.ItemStack>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"item")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Item to be added")))),(0,l.kt)("h3",{id:"setitemnullableitemstack-int32"},"SetItem(Nullable","<","ItemStack",">",", Int32)"),(0,l.kt)("p",null,"Sets item at specified position"),(0,l.kt)("h6",{id:"view-source-4"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Item/Inventory.cs#L48"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Inventory SetItem(ItemStack? item, int pos)\n")),(0,l.kt)("h5",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Item/Inventory"},"CopperSharp.Item.Inventory"),": This inventory"),(0,l.kt)("h5",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<CopperSharp.Item.ItemStack>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"item")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Item to be set")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Int32")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"pos")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Position at which the item should be set")))),(0,l.kt)("h3",{id:"removeitemint32"},"RemoveItem(Int32)"),(0,l.kt)("p",null,"Removes an item entry from this inventory"),(0,l.kt)("h6",{id:"view-source-5"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Item/Inventory.cs#L61"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Inventory RemoveItem(int pos)\n")),(0,l.kt)("h5",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Item/Inventory"},"CopperSharp.Item.Inventory"),": This inventory"),(0,l.kt)("h5",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Int32")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"pos")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Position of item to be removed")))),(0,l.kt)("h3",{id:"wipeitemint32"},"WipeItem(Int32)"),(0,l.kt)("p",null,"Wipes an item entry, converting it to ",(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Item/ItemStack#airstack"},"CopperSharp.Item.ItemStack.AirStack")),(0,l.kt)("h6",{id:"view-source-6"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Item/Inventory.cs#L72"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Inventory WipeItem(int pos)\n")),(0,l.kt)("h5",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Item/Inventory"},"CopperSharp.Item.Inventory"),": This inventory"),(0,l.kt)("h5",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Int32")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"pos")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Position, at which the item should be wiped")))),(0,l.kt)("h3",{id:"serializeintoinbtwriter-boolean"},"SerializeInto(INbtWriter, Boolean)"),(0,l.kt)("p",null,"Serializes this inventory into provided string nbt writer"),(0,l.kt)("h6",{id:"view-source-7"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Item/Inventory.cs#L83"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task SerializeInto(INbtWriter sw, bool enclosed = true)\n")),(0,l.kt)("h5",{id:"returns-5"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Task")),(0,l.kt)("h5",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"../CopperSharp.Data.SNbt/INbtWriter"},"CopperSharp.Data.SNbt.INbtWriter")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"sw")),(0,l.kt)("td",{parentName:"tr",align:"left"},"String nbt writer into which data should be serialized")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"enclosed")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether to enclose the compound in braces")))))}u.isMDXComponent=!0}}]);