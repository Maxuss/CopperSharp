"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[25372],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=c(a),u=n,h=m["".concat(p,".").concat(u)]||m[u]||s[u]||i;return a?r.createElement(h,l(l({ref:t},d),{},{components:a})):r.createElement(h,l({ref:t},d))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var c=2;c<i;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},12849:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return m}});var r=a(87462),n=a(63366),i=(a(67294),a(3905)),l=["components"],o={title:"Struct LocationPredicate",sidebar_label:"LocationPredicate",description:"Represents a condition for a location"},p="Struct LocationPredicate",c={unversionedId:"api/CopperSharp.Advancements.Predicates/LocationPredicate",id:"api/CopperSharp.Advancements.Predicates/LocationPredicate",title:"Struct LocationPredicate",description:"Represents a condition for a location",source:"@site/docs/api/CopperSharp.Advancements.Predicates/LocationPredicate.md",sourceDirName:"api/CopperSharp.Advancements.Predicates",slug:"/api/CopperSharp.Advancements.Predicates/LocationPredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/LocationPredicate",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Advancements.Predicates/LocationPredicate.md",tags:[],version:"current",frontMatter:{title:"Struct LocationPredicate",sidebar_label:"LocationPredicate",description:"Represents a condition for a location"},sidebar:"tutorialSidebar",previous:{title:"ItemPredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/ItemPredicate"},next:{title:"PlayerPredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/PlayerPredicate"}},d=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"Biome(Identifier)",id:"biomeidentifier",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"Dimension(Dimension)",id:"dimensiondimension",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"Structure(Identifier)",id:"structureidentifier",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3},{value:"Light(StrictRange)",id:"lightstrictrange",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-3",children:[],level:5}],level:3},{value:"Block(BlockPredicate)",id:"blockblockpredicate",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-4",children:[],level:5},{value:"Parameters",id:"parameters-4",children:[],level:5}],level:3},{value:"Smokey(Boolean)",id:"smokeyboolean",children:[{value:"View Source",id:"view-source-6",children:[],level:6},{value:"Returns",id:"returns-5",children:[],level:5},{value:"Parameters",id:"parameters-5",children:[],level:5}],level:3},{value:"Fluid(Identifier)",id:"fluididentifier",children:[{value:"View Source",id:"view-source-7",children:[],level:6},{value:"Returns",id:"returns-6",children:[],level:5},{value:"Parameters",id:"parameters-6",children:[],level:5}],level:3},{value:"Position(Nullable&lt;StrictRange&gt;, Nullable&lt;StrictRange&gt;, Nullable&lt;StrictRange&gt;)",id:"positionnullablestrictrange-nullablestrictrange-nullablestrictrange",children:[{value:"View Source",id:"view-source-8",children:[],level:6},{value:"Returns",id:"returns-7",children:[],level:5},{value:"Parameters",id:"parameters-7",children:[],level:5}],level:3},{value:"SerializeInto(JsonTextWriter)",id:"serializeintojsontextwriter",children:[{value:"View Source",id:"view-source-9",children:[],level:6},{value:"Returns",id:"returns-8",children:[],level:5},{value:"Parameters",id:"parameters-8",children:[],level:5}],level:3}],level:2}],s={toc:d};function m(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"struct-locationpredicate"},"Struct LocationPredicate"),(0,i.kt)("p",null,"Represents a condition for a location"),(0,i.kt)("h6",{id:"assembly-coppersharpdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L11"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public struct LocationPredicate\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"biomeidentifier"},"Biome(Identifier)"),(0,i.kt)("p",null,"Sets biome for this location predicate"),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L25"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public LocationPredicate Biome(Identifier biome)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/LocationPredicate"},"CopperSharp.Advancements.Predicates.LocationPredicate"),": This location predicate"),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Registry/Identifier"},"CopperSharp.Registry.Identifier")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"biome")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Biome to be set")))),(0,i.kt)("h3",{id:"dimensiondimension"},"Dimension(Dimension)"),(0,i.kt)("p",null,"Sets dimension for this location predicate"),(0,i.kt)("h6",{id:"view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L36"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public LocationPredicate Dimension(Dimension dimension)\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/LocationPredicate"},"CopperSharp.Advancements.Predicates.LocationPredicate"),": This location predicate"),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.World/Dimension"},"CopperSharp.World.Dimension")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"dimension")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Dimension to be set")))),(0,i.kt)("h3",{id:"structureidentifier"},"Structure(Identifier)"),(0,i.kt)("p",null,"Sets structure feature for this location predicate"),(0,i.kt)("h6",{id:"view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L47"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public LocationPredicate Structure(Identifier structure)\n")),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/LocationPredicate"},"CopperSharp.Advancements.Predicates.LocationPredicate"),": This location predicate"),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Registry/Identifier"},"CopperSharp.Registry.Identifier")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"structure")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Structure to be set")))),(0,i.kt)("h3",{id:"lightstrictrange"},"Light(StrictRange)"),(0,i.kt)("p",null,"Sets light amount for this location predicate"),(0,i.kt)("h6",{id:"view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L58"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public LocationPredicate Light(StrictRange light)\n")),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/LocationPredicate"},"CopperSharp.Advancements.Predicates.LocationPredicate"),": This location predicate"),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Utils/StrictRange"},"CopperSharp.Utils.StrictRange")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"light")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Light amount to be set")))),(0,i.kt)("h3",{id:"blockblockpredicate"},"Block(BlockPredicate)"),(0,i.kt)("p",null,"Sets specific block condition for this location predicate"),(0,i.kt)("h6",{id:"view-source-5"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L69"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public LocationPredicate Block(BlockPredicate block)\n")),(0,i.kt)("h5",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/LocationPredicate"},"CopperSharp.Advancements.Predicates.LocationPredicate"),": This location predicate"),(0,i.kt)("h5",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Advancements.Predicates/BlockPredicate"},"CopperSharp.Advancements.Predicates.BlockPredicate")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"block")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Block predicate to be set")))),(0,i.kt)("h3",{id:"smokeyboolean"},"Smokey(Boolean)"),(0,i.kt)("p",null,"Sets whether this location should be over the campfire"),(0,i.kt)("h6",{id:"view-source-6"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L80"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public LocationPredicate Smokey(bool smokey = true)\n")),(0,i.kt)("h5",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/LocationPredicate"},"CopperSharp.Advancements.Predicates.LocationPredicate"),": This location predicate"),(0,i.kt)("h5",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"smokey")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,i.kt)("h3",{id:"fluididentifier"},"Fluid(Identifier)"),(0,i.kt)("p",null,"Sets specific fluid at this location predicate"),(0,i.kt)("h6",{id:"view-source-7"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L91"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public LocationPredicate Fluid(Identifier fluid)\n")),(0,i.kt)("h5",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/LocationPredicate"},"CopperSharp.Advancements.Predicates.LocationPredicate"),": This location predicate"),(0,i.kt)("h5",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../CopperSharp.Registry/Identifier"},"CopperSharp.Registry.Identifier")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"fluid")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Fluid to be set")))),(0,i.kt)("h3",{id:"positionnullablestrictrange-nullablestrictrange-nullablestrictrange"},"Position(Nullable","<","StrictRange",">",", Nullable","<","StrictRange",">",", Nullable","<","StrictRange",">",")"),(0,i.kt)("p",null,"Sets a specific position for this location predicate"),(0,i.kt)("h6",{id:"view-source-8"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L105"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public LocationPredicate Position(StrictRange? x = null, StrictRange? y = null, StrictRange? z = null)\n")),(0,i.kt)("h5",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../CopperSharp.Advancements.Predicates/LocationPredicate"},"CopperSharp.Advancements.Predicates.LocationPredicate"),": This location predicate"),(0,i.kt)("h5",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Nullable<CopperSharp.Utils.StrictRange>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"x")),(0,i.kt)("td",{parentName:"tr",align:"left"},"X to be set")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Nullable<CopperSharp.Utils.StrictRange>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"y")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Y to be set")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Nullable<CopperSharp.Utils.StrictRange>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"z")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Z to be set")))),(0,i.kt)("h3",{id:"serializeintojsontextwriter"},"SerializeInto(JsonTextWriter)"),(0,i.kt)("p",null,"Serializes this entity predicate into provided"),(0,i.kt)("h6",{id:"view-source-9"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Advancements/Predicates/LocationPredicate.cs#L118"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task SerializeInto(JsonTextWriter jw)\n")),(0,i.kt)("h5",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Task")),(0,i.kt)("h5",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"JsonTextWriter")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"jw")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Writer to be used")))))}m.isMDXComponent=!0}}]);