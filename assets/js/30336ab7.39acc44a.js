"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[97477],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},c=Object.keys(e);for(a=0;a<c.length;a++)r=c[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)r=c[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),o=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=o(e.components);return a.createElement(d.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=o(r),m=n,h=u["".concat(d,".").concat(m)]||u[m]||l[m]||c;return r?a.createElement(h,i(i({ref:t},s),{},{components:r})):a.createElement(h,i({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,i=new Array(c);i[0]=u;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var o=2;o<c;o++)i[o]=r[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},47368:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return o},toc:function(){return s},default:function(){return u}});var a=r(87462),n=r(63366),c=(r(67294),r(3905)),i=["components"],p={title:"Namespace CopperSharp.Advancements.Predicates",sidebar_label:"Index",sidebar_position:0},d="Namespace CopperSharp.Advancements.Predicates",o={unversionedId:"api/CopperSharp.Advancements.Predicates/CopperSharp.Advancements.Predicates",id:"api/CopperSharp.Advancements.Predicates/CopperSharp.Advancements.Predicates",title:"Namespace CopperSharp.Advancements.Predicates",description:"Classes",source:"@site/docs/api/CopperSharp.Advancements.Predicates/CopperSharp.Advancements.Predicates.md",sourceDirName:"api/CopperSharp.Advancements.Predicates",slug:"/api/CopperSharp.Advancements.Predicates/",permalink:"/docs/api/CopperSharp.Advancements.Predicates/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Advancements.Predicates/CopperSharp.Advancements.Predicates.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Advancements.Predicates",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"TriggerCondition",permalink:"/docs/api/CopperSharp.Advancements/TriggerCondition"},next:{title:"BlockPredicate",permalink:"/docs/api/CopperSharp.Advancements.Predicates/BlockPredicate"}},s=[{value:"Classes",id:"classes",children:[{value:"DamagePredicate",id:"damagepredicate",children:[],level:3},{value:"EntityPredicate",id:"entitypredicate",children:[],level:3},{value:"PlayerPredicate",id:"playerpredicate",children:[],level:3}],level:2},{value:"Structs",id:"structs",children:[{value:"BlockPredicate",id:"blockpredicate",children:[],level:3},{value:"DistancePredicate",id:"distancepredicate",children:[],level:3},{value:"EffectPredicate",id:"effectpredicate",children:[],level:3},{value:"EnchantmentPredicate",id:"enchantmentpredicate",children:[],level:3},{value:"ItemPredicate",id:"itempredicate",children:[],level:3},{value:"LocationPredicate",id:"locationpredicate",children:[],level:3}],level:2}],l={toc:s};function u(e){var t=e.components,r=(0,n.Z)(e,i);return(0,c.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"namespace-coppersharpadvancementspredicates"},"Namespace CopperSharp.Advancements.Predicates"),(0,c.kt)("h2",{id:"classes"},"Classes"),(0,c.kt)("h3",{id:"damagepredicate"},(0,c.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements.Predicates/DamagePredicate"},"DamagePredicate")),(0,c.kt)("p",null,"Represents a damage done predicate"),(0,c.kt)("h3",{id:"entitypredicate"},(0,c.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements.Predicates/EntityPredicate"},"EntityPredicate")),(0,c.kt)("p",null,"Represents a trigger condition that also includes a player"),(0,c.kt)("h3",{id:"playerpredicate"},(0,c.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements.Predicates/PlayerPredicate"},"PlayerPredicate")),(0,c.kt)("p",null,"Represents specific conditions to be checked for player"),(0,c.kt)("h2",{id:"structs"},"Structs"),(0,c.kt)("h3",{id:"blockpredicate"},(0,c.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements.Predicates/BlockPredicate"},"BlockPredicate")),(0,c.kt)("p",null,"Represents a block to be used in condition"),(0,c.kt)("h3",{id:"distancepredicate"},(0,c.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements.Predicates/DistancePredicate"},"DistancePredicate")),(0,c.kt)("p",null,"Represents a distance predicate"),(0,c.kt)("h3",{id:"effectpredicate"},(0,c.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements.Predicates/EffectPredicate"},"EffectPredicate")),(0,c.kt)("p",null,"Represents an effect for use in conditions"),(0,c.kt)("h3",{id:"enchantmentpredicate"},(0,c.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements.Predicates/EnchantmentPredicate"},"EnchantmentPredicate")),(0,c.kt)("p",null,"Represents an enchantment for use in conditions"),(0,c.kt)("h3",{id:"itempredicate"},(0,c.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements.Predicates/ItemPredicate"},"ItemPredicate")),(0,c.kt)("p",null,"Represents an item for use in conditions"),(0,c.kt)("h3",{id:"locationpredicate"},(0,c.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements.Predicates/LocationPredicate"},"LocationPredicate")),(0,c.kt)("p",null,"Represents a condition for a location"))}u.isMDXComponent=!0}}]);