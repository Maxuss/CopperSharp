"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[10799],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return u}});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function p(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?p(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},p=Object.keys(e);for(t=0;t<p.length;t++)r=p[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(t=0;t<p.length;t++)r=p[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=t.createContext({}),d=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},s=function(e){var n=d(e.components);return t.createElement(i.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,p=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=d(r),u=a,v=m["".concat(i,".").concat(u)]||m[u]||l[u]||p;return r?t.createElement(v,c(c({ref:n},s),{},{components:r})):t.createElement(v,c({ref:n},s))}));function u(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var p=r.length,c=new Array(p);c[0]=m;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var d=2;d<p;d++)c[d]=r[d];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},45892:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return o},contentTitle:function(){return i},metadata:function(){return d},toc:function(){return s},default:function(){return m}});var t=r(87462),a=r(63366),p=(r(67294),r(3905)),c=["components"],o={title:"Namespace CopperSharp.Advancements",sidebar_label:"Index",sidebar_position:0},i="Namespace CopperSharp.Advancements",d={unversionedId:"api/CopperSharp.Advancements/CopperSharp.Advancements",id:"api/CopperSharp.Advancements/CopperSharp.Advancements",title:"Namespace CopperSharp.Advancements",description:"Classes",source:"@site/docs/api/CopperSharp.Advancements/CopperSharp.Advancements.md",sourceDirName:"api/CopperSharp.Advancements",slug:"/api/CopperSharp.Advancements/",permalink:"/docs/api/CopperSharp.Advancements/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Advancements/CopperSharp.Advancements.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Advancements",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Index",permalink:"/docs/api/CopperSharp/"},next:{title:"Advancement",permalink:"/docs/api/CopperSharp.Advancements/Advancement"}},s=[{value:"Classes",id:"classes",children:[{value:"Advancement",id:"advancement",children:[],level:3},{value:"Criterion",id:"criterion",children:[],level:3},{value:"TriggerCondition",id:"triggercondition",children:[],level:3}],level:2},{value:"Structs",id:"structs",children:[{value:"AdvancementGroup",id:"advancementgroup",children:[],level:3},{value:"AdvancementReward",id:"advancementreward",children:[],level:3}],level:2},{value:"Enums",id:"enums",children:[{value:"AdvancementType",id:"advancementtype",children:[],level:3}],level:2}],l={toc:s};function m(e){var n=e.components,r=(0,a.Z)(e,c);return(0,p.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"namespace-coppersharpadvancements"},"Namespace CopperSharp.Advancements"),(0,p.kt)("h2",{id:"classes"},"Classes"),(0,p.kt)("h3",{id:"advancement"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements/Advancement"},"Advancement")),(0,p.kt)("p",null,"Represents an advancement"),(0,p.kt)("h3",{id:"criterion"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements/Criterion"},"Criterion")),(0,p.kt)("p",null,"Represents a criterion that must be\ncompleted to grant advancement."),(0,p.kt)("h3",{id:"triggercondition"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements/TriggerCondition"},"TriggerCondition")),(0,p.kt)("p",null,"Represents a condition of an advancement trigger"),(0,p.kt)("h2",{id:"structs"},"Structs"),(0,p.kt)("h3",{id:"advancementgroup"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements/AdvancementGroup"},"AdvancementGroup")),(0,p.kt)("p",null,"Represents a group of advancements, sharing the same tab and background"),(0,p.kt)("h3",{id:"advancementreward"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements/AdvancementReward"},"AdvancementReward")),(0,p.kt)("p",null,"Represents an advancement reward"),(0,p.kt)("h2",{id:"enums"},"Enums"),(0,p.kt)("h3",{id:"advancementtype"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Advancements/AdvancementType"},"AdvancementType")),(0,p.kt)("p",null,"Represents type of advancement frame"))}m.isMDXComponent=!0}}]);