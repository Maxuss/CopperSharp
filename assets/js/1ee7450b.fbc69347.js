"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[55022],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return h}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,p=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(r),h=a,d=u["".concat(l,".").concat(h)]||u[h]||m[h]||p;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=r.length,i=new Array(p);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<p;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},26874:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var n=r(87462),a=r(63366),p=(r(67294),r(3905)),i=["components"],o={title:"Namespace CopperSharp.Item",sidebar_label:"Index",sidebar_position:0},l="Namespace CopperSharp.Item",c={unversionedId:"api/CopperSharp.Item/CopperSharp.Item",id:"api/CopperSharp.Item/CopperSharp.Item",title:"Namespace CopperSharp.Item",description:"Classes",source:"@site/docs/api/CopperSharp.Item/CopperSharp.Item.md",sourceDirName:"api/CopperSharp.Item",slug:"/api/CopperSharp.Item/",permalink:"/docs/api/CopperSharp.Item/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Item/CopperSharp.Item.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Item",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"RightClickHook",permalink:"/docs/api/CopperSharp.Hooks/RightClickHook"},next:{title:"Enchant",permalink:"/docs/api/CopperSharp.Item/Enchant"}},s=[{value:"Classes",id:"classes",children:[{value:"Inventory",id:"inventory",children:[],level:3}],level:2},{value:"Structs",id:"structs",children:[{value:"Enchantment",id:"enchantment",children:[],level:3},{value:"ItemStack",id:"itemstack",children:[],level:3},{value:"Material",id:"material",children:[],level:3}],level:2},{value:"Interfaces",id:"interfaces",children:[{value:"IStack",id:"istack",children:[],level:3}],level:2},{value:"Enums",id:"enums",children:[{value:"Enchant",id:"enchant",children:[],level:3},{value:"ItemFlag",id:"itemflag",children:[],level:3},{value:"ItemSlot",id:"itemslot",children:[],level:3}],level:2}],m={toc:s};function u(e){var t=e.components,r=(0,a.Z)(e,i);return(0,p.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"namespace-coppersharpitem"},"Namespace CopperSharp.Item"),(0,p.kt)("h2",{id:"classes"},"Classes"),(0,p.kt)("h3",{id:"inventory"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item/Inventory"},"Inventory")),(0,p.kt)("p",null,"Represents an inventory"),(0,p.kt)("h2",{id:"structs"},"Structs"),(0,p.kt)("h3",{id:"enchantment"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item/Enchantment"},"Enchantment")),(0,p.kt)("p",null,"Represents an applicable enchantment"),(0,p.kt)("h3",{id:"itemstack"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item/ItemStack"},"ItemStack")),(0,p.kt)("p",null,"Represents some amount of items"),(0,p.kt)("h3",{id:"material"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item/Material"},"Material")),(0,p.kt)("p",null,"Represents a minecraft material."),(0,p.kt)("h2",{id:"interfaces"},"Interfaces"),(0,p.kt)("h3",{id:"istack"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item/IStack"},"IStack")),(0,p.kt)("p",null,"A global interface to item stacks"),(0,p.kt)("h2",{id:"enums"},"Enums"),(0,p.kt)("h3",{id:"enchant"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item/Enchant"},"Enchant")),(0,p.kt)("p",null,"Represents type of enchant"),(0,p.kt)("h3",{id:"itemflag"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item/ItemFlag"},"ItemFlag")),(0,p.kt)("p",null,"Represents an item flag, that can be hidden"),(0,p.kt)("h3",{id:"itemslot"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item/ItemSlot"},"ItemSlot")),(0,p.kt)("p",null,"Represents an equipable slot for items"))}u.isMDXComponent=!0}}]);