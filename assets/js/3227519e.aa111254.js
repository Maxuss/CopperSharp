"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[52353],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return h}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=i(r),h=o,d=u["".concat(c,".").concat(h)]||u[h]||k[h]||a;return r?n.createElement(d,l(l({ref:t},s),{},{components:r})):n.createElement(d,l({ref:t},s))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var i=2;i<a;i++)l[i]=r[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},29432:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return i},toc:function(){return s},default:function(){return u}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),l=["components"],p={title:"Namespace CopperSharp.Blocks",sidebar_label:"Index",sidebar_position:0},c="Namespace CopperSharp.Blocks",i={unversionedId:"api/CopperSharp.Blocks/CopperSharp.Blocks",id:"api/CopperSharp.Blocks/CopperSharp.Blocks",title:"Namespace CopperSharp.Blocks",description:"Classes",source:"@site/docs/api/CopperSharp.Blocks/CopperSharp.Blocks.md",sourceDirName:"api/CopperSharp.Blocks",slug:"/api/CopperSharp.Blocks/",permalink:"/docs/api/CopperSharp.Blocks/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Blocks/CopperSharp.Blocks.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Blocks",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"VoluntaryExileTrigger",permalink:"/docs/api/CopperSharp.Advancements.Triggers/VoluntaryExileTrigger"},next:{title:"Block",permalink:"/docs/api/CopperSharp.Blocks/Block"}},s=[{value:"Classes",id:"classes",children:[{value:"Block",id:"block",children:[],level:3},{value:"BlockState",id:"blockstate",children:[],level:3},{value:"EntityBlockState<TEntity>",id:"entityblockstatetentity",children:[],level:3},{value:"InventoryBlock<TInventory>",id:"inventoryblocktinventory",children:[],level:3}],level:2},{value:"Interfaces",id:"interfaces",children:[{value:"ILockable",id:"ilockable",children:[],level:3},{value:"ILootable",id:"ilootable",children:[],level:3},{value:"IState",id:"istate",children:[],level:3}],level:2}],k={toc:s};function u(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},k,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"namespace-coppersharpblocks"},"Namespace CopperSharp.Blocks"),(0,a.kt)("h2",{id:"classes"},"Classes"),(0,a.kt)("h3",{id:"block"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Blocks/Block"},"Block")),(0,a.kt)("p",null,"Represents a single block"),(0,a.kt)("h3",{id:"blockstate"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Blocks/BlockState"},"BlockState")),(0,a.kt)("p",null,"An abstract superclass for all block states"),(0,a.kt)("h3",{id:"entityblockstatetentity"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Blocks/EntityBlockState%60TEntity%60"},"EntityBlockState","<","TEntity",">")),(0,a.kt)("p",null,"Represents a block state which can contain entities"),(0,a.kt)("h3",{id:"inventoryblocktinventory"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Blocks/InventoryBlock%60TInventory%60"},"InventoryBlock","<","TInventory",">")),(0,a.kt)("p",null,"Represents a block that can have an inventory inside"),(0,a.kt)("h2",{id:"interfaces"},"Interfaces"),(0,a.kt)("h3",{id:"ilockable"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Blocks/ILockable"},"ILockable")),(0,a.kt)("p",null,"Represents a lockable block"),(0,a.kt)("h3",{id:"ilootable"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Blocks/ILootable"},"ILootable")),(0,a.kt)("p",null,"Represents a block that may have loot inside"),(0,a.kt)("h3",{id:"istate"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Blocks/IState"},"IState")),(0,a.kt)("p",null,"An interface for block states"))}u.isMDXComponent=!0}}]);