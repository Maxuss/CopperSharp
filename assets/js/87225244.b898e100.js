"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7650],{3905:function(t,e,r){r.d(e,{Zo:function(){return c},kt:function(){return d}});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function p(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},l=Object.keys(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var o=a.createContext({}),s=function(t){var e=a.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},c=function(t){var e=s(t.components);return a.createElement(o.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,l=t.originalType,o=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),m=s(r),d=n,h=m["".concat(o,".").concat(d)]||m[d]||u[d]||l;return r?a.createElement(h,i(i({ref:e},c),{},{components:r})):a.createElement(h,i({ref:e},c))}));function d(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=r.length,i=new Array(l);i[0]=m;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:n,i[1]=p;for(var s=2;s<l;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},30316:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var a=r(87462),n=r(63366),l=(r(67294),r(3905)),i=["components"],p={title:"Class AbstractArrow",sidebar_label:"AbstractArrow",description:"An abstract super class for arrows"},o="Class AbstractArrow",s={unversionedId:"api/CopperSharp.Entity/AbstractArrow",id:"api/CopperSharp.Entity/AbstractArrow",title:"Class AbstractArrow",description:"An abstract super class for arrows",source:"@site/docs/api/CopperSharp.Entity/AbstractArrow.md",sourceDirName:"api/CopperSharp.Entity",slug:"/api/CopperSharp.Entity/AbstractArrow",permalink:"/docs/api/CopperSharp.Entity/AbstractArrow",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Entity/AbstractArrow.md",tags:[],version:"current",frontMatter:{title:"Class AbstractArrow",sidebar_label:"AbstractArrow",description:"An abstract super class for arrows"},sidebar:"tutorialSidebar",previous:{title:"Index",permalink:"/docs/api/CopperSharp.Entity/"},next:{title:"AbstractEntity",permalink:"/docs/api/CopperSharp.Entity/AbstractEntity"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"Crits(Boolean)",id:"critsboolean",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"DamageMultiplier(Double)",id:"damagemultiplierdouble",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"Pickup(ArrowPickup)",id:"pickuparrowpickup",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3},{value:"PiercesLeft(Byte)",id:"piercesleftbyte",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-3",children:[],level:5}],level:3},{value:"HitSound(String)",id:"hitsoundstring",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-4",children:[],level:5},{value:"Parameters",id:"parameters-4",children:[],level:5}],level:3}],level:2}],u={toc:c};function m(t){var e=t.components,r=(0,n.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"class-abstractarrow"},"Class AbstractArrow"),(0,l.kt)("p",null,"An abstract super class for arrows"),(0,l.kt)("h6",{id:"assembly-coppersharpdll"},(0,l.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,l.kt)("h6",{id:"view-source"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/AbstractArrow.cs#L6"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract class AbstractArrow : Projectile\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"critsboolean"},"Crits(Boolean)"),(0,l.kt)("p",null,"Whether this arrow will crit"),(0,l.kt)("h6",{id:"view-source-1"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/AbstractArrow.cs#L18"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public AbstractArrow Crits(bool crits)\n")),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Entity/AbstractArrow"},"CopperSharp.Entity.AbstractArrow"),": This abstract arrow"),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"crits")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,l.kt)("h3",{id:"damagemultiplierdouble"},"DamageMultiplier(Double)"),(0,l.kt)("p",null,"Sets damage multiplier of this arrow. Default is 2.0"),(0,l.kt)("h6",{id:"view-source-2"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/AbstractArrow.cs#L29"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public AbstractArrow DamageMultiplier(double mul)\n")),(0,l.kt)("h5",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Entity/AbstractArrow"},"CopperSharp.Entity.AbstractArrow"),": This abstract arrow"),(0,l.kt)("h5",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Double")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"mul")),(0,l.kt)("td",{parentName:"tr",align:"left"},"New damage multiplier")))),(0,l.kt)("h3",{id:"pickuparrowpickup"},"Pickup(ArrowPickup)"),(0,l.kt)("p",null,"Sets an extra pick up policy for this arrow"),(0,l.kt)("h6",{id:"view-source-3"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/AbstractArrow.cs#L40"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public AbstractArrow Pickup(ArrowPickup ap)\n")),(0,l.kt)("h5",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Entity/AbstractArrow"},"CopperSharp.Entity.AbstractArrow"),": This abstract arrow"),(0,l.kt)("h5",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"../CopperSharp.Entity/ArrowPickup"},"CopperSharp.Entity.ArrowPickup")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"ap")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Pick up policy")))),(0,l.kt)("h3",{id:"piercesleftbyte"},"PiercesLeft(Byte)"),(0,l.kt)("p",null,"Amount of targets this arrow can pierce"),(0,l.kt)("h6",{id:"view-source-4"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/AbstractArrow.cs#L51"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public AbstractArrow PiercesLeft(byte left)\n")),(0,l.kt)("h5",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Entity/AbstractArrow"},"CopperSharp.Entity.AbstractArrow"),": This abstract arrow"),(0,l.kt)("h5",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Byte")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"left")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Amount of targets left to pierce")))),(0,l.kt)("h3",{id:"hitsoundstring"},"HitSound(String)"),(0,l.kt)("p",null,"A hit sound to be played when this arrow hits something"),(0,l.kt)("h6",{id:"view-source-5"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/AbstractArrow.cs#L62"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public AbstractArrow HitSound(string sound)\n")),(0,l.kt)("h5",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../CopperSharp.Entity/AbstractArrow"},"CopperSharp.Entity.AbstractArrow"),": This abstract arrow"),(0,l.kt)("h5",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.String")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"sound")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Sound event to be played")))))}m.isMDXComponent=!0}}]);