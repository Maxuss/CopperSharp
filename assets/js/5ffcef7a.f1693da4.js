"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[97906],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return g}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(r),g=o,d=m["".concat(l,".").concat(g)]||m[g]||u[g]||a;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},18038:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],p={title:"Struct TextFormatting",sidebar_label:"TextFormatting",description:"Represents a formatting for text"},l="Struct TextFormatting",c={unversionedId:"api/CopperSharp.Text/TextFormatting",id:"api/CopperSharp.Text/TextFormatting",title:"Struct TextFormatting",description:"Represents a formatting for text",source:"@site/docs/api/CopperSharp.Text/TextFormatting.md",sourceDirName:"api/CopperSharp.Text",slug:"/api/CopperSharp.Text/TextFormatting",permalink:"/docs/api/CopperSharp.Text/TextFormatting",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Text/TextFormatting.md",tags:[],version:"current",frontMatter:{title:"Struct TextFormatting",sidebar_label:"TextFormatting",description:"Represents a formatting for text"},sidebar:"tutorialSidebar",previous:{title:"TextComponent",permalink:"/docs/api/CopperSharp.Text/TextComponent"},next:{title:"TranslatableComponent",permalink:"/docs/api/CopperSharp.Text/TranslatableComponent"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"Formatting",id:"formatting",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"Toggled",id:"toggled",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3}],level:2}],u={toc:s};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"struct-textformatting"},"Struct TextFormatting"),(0,a.kt)("p",null,"Represents a formatting for text"),(0,a.kt)("h6",{id:"assembly-coppersharpdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,a.kt)("h6",{id:"view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/TextFormatting.cs#L6"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public struct TextFormatting\n")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"formatting"},"Formatting"),(0,a.kt)("p",null,"Type of this formatting"),(0,a.kt)("h6",{id:"view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/TextFormatting.cs#L11"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public FormattingType Formatting { get; }\n")),(0,a.kt)("h3",{id:"toggled"},"Toggled"),(0,a.kt)("p",null,"Whether the formatting is toggled on"),(0,a.kt)("h6",{id:"view-source-2"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Text/TextFormatting.cs#L16"},"View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool Toggled { get; set; }\n")))}m.isMDXComponent=!0}}]);