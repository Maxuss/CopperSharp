"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[86718],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return k}});var a=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var o=a.createContext({}),s=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(r),k=l,h=u["".concat(o,".").concat(k)]||u[k]||m[k]||n;return r?a.createElement(h,i(i({ref:t},c),{},{components:r})):a.createElement(h,i({ref:t},c))}));function k(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,i=new Array(n);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var s=2;s<n;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},41152:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var a=r(87462),l=r(63366),n=(r(67294),r(3905)),i=["components"],p={title:"Class FallingBlock",sidebar_label:"FallingBlock",description:"Represents a falling block entity"},o="Class FallingBlock",s={unversionedId:"api/CopperSharp.Entity.Impl/FallingBlock",id:"api/CopperSharp.Entity.Impl/FallingBlock",title:"Class FallingBlock",description:"Represents a falling block entity",source:"@site/docs/api/CopperSharp.Entity.Impl/FallingBlock.md",sourceDirName:"api/CopperSharp.Entity.Impl",slug:"/api/CopperSharp.Entity.Impl/FallingBlock",permalink:"/docs/api/CopperSharp.Entity.Impl/FallingBlock",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Entity.Impl/FallingBlock.md",tags:[],version:"current",frontMatter:{title:"Class FallingBlock",sidebar_label:"FallingBlock",description:"Represents a falling block entity"},sidebar:"tutorialSidebar",previous:{title:"EyeOfEnder",permalink:"/docs/api/CopperSharp.Entity.Impl/EyeOfEnder"},next:{title:"Fireball",permalink:"/docs/api/CopperSharp.Entity.Impl/Fireball"}},c=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"DropsItem(Boolean)",id:"dropsitemboolean",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"HurtsEntities(Boolean)",id:"hurtsentitiesboolean",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"FallHurtMultiplier(Single)",id:"fallhurtmultipliersingle",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3},{value:"BlockState(BlockState)",id:"blockstateblockstate",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-3",children:[],level:5}],level:3},{value:"SerializeExtra(INbtWriter)",id:"serializeextrainbtwriter",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-4",children:[],level:5},{value:"Parameters",id:"parameters-4",children:[],level:5}],level:3}],level:2}],m={toc:c};function u(e){var t=e.components,r=(0,l.Z)(e,i);return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-fallingblock"},"Class FallingBlock"),(0,n.kt)("p",null,"Represents a falling block entity"),(0,n.kt)("h6",{id:"assembly-coppersharpdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/FallingBlock.cs#L9"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class FallingBlock : AbstractEntity\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"dropsitemboolean"},"DropsItem(Boolean)"),(0,n.kt)("p",null,"Whether this falling block drops item"),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/FallingBlock.cs#L22"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public FallingBlock DropsItem(bool drops = true)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../CopperSharp.Entity.Impl/FallingBlock"},"CopperSharp.Entity.Impl.FallingBlock"),": This falling block"),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"drops")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether it drops item")))),(0,n.kt)("h3",{id:"hurtsentitiesboolean"},"HurtsEntities(Boolean)"),(0,n.kt)("p",null,"Whether this block hurts entities"),(0,n.kt)("h6",{id:"view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/FallingBlock.cs#L33"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public FallingBlock HurtsEntities(bool hurts = true)\n")),(0,n.kt)("h5",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../CopperSharp.Entity.Impl/FallingBlock"},"CopperSharp.Entity.Impl.FallingBlock"),": This falling block"),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"hurts")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Marker")))),(0,n.kt)("h3",{id:"fallhurtmultipliersingle"},"FallHurtMultiplier(Single)"),(0,n.kt)("p",null,"Multiplier of this block","'","s hurt amount on fall"),(0,n.kt)("h6",{id:"view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/FallingBlock.cs#L44"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public FallingBlock FallHurtMultiplier(float amount)\n")),(0,n.kt)("h5",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../CopperSharp.Entity.Impl/FallingBlock"},"CopperSharp.Entity.Impl.FallingBlock"),": This falling block"),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Single")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"amount")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Multiplier")))),(0,n.kt)("h3",{id:"blockstateblockstate"},"BlockState(BlockState)"),(0,n.kt)("p",null,"Sets block state of this falling block"),(0,n.kt)("h6",{id:"view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/FallingBlock.cs#L55"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public FallingBlock BlockState(BlockState state)\n")),(0,n.kt)("h5",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../CopperSharp.Entity.Impl/FallingBlock"},"CopperSharp.Entity.Impl.FallingBlock"),": This falling block"),(0,n.kt)("h5",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../CopperSharp.Blocks/BlockState"},"CopperSharp.Blocks.BlockState")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"state")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Block state to be se")))),(0,n.kt)("h3",{id:"serializeextrainbtwriter"},"SerializeExtra(INbtWriter)"),(0,n.kt)("p",null,"Serializes extra data from this inheritor"),(0,n.kt)("h6",{id:"view-source-5"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Entity/Impl/FallingBlock.cs#L62"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected override Task SerializeExtra(INbtWriter sw)\n")),(0,n.kt)("h5",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task")),(0,n.kt)("h5",{id:"parameters-4"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../CopperSharp.Data.SNbt/INbtWriter"},"CopperSharp.Data.SNbt.INbtWriter")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"sw")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Writer to which the data should be written")))))}u.isMDXComponent=!0}}]);