"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[91569],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=o.createContext({}),i=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=i(e.components);return o.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=i(r),m=n,h=s["".concat(u,".").concat(m)]||s[m]||c[m]||a;return r?o.createElement(h,l(l({ref:t},d),{},{components:r})):o.createElement(h,l({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=s;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var i=2;i<a;i++)l[i]=r[i];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}s.displayName="MDXCreateElement"},89990:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return i},toc:function(){return d},default:function(){return s}});var o=r(87462),n=r(63366),a=(r(67294),r(3905)),l=["components"],p={title:"Namespace CopperSharp.Modules",sidebar_label:"Index",sidebar_position:0},u="Namespace CopperSharp.Modules",i={unversionedId:"api/CopperSharp.Modules/CopperSharp.Modules",id:"api/CopperSharp.Modules/CopperSharp.Modules",title:"Namespace CopperSharp.Modules",description:"Classes",source:"@site/docs/api/CopperSharp.Modules/CopperSharp.Modules.md",sourceDirName:"api/CopperSharp.Modules",slug:"/api/CopperSharp.Modules/",permalink:"/docs/api/CopperSharp.Modules/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Modules/CopperSharp.Modules.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Modules",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"ModelManager",permalink:"/docs/api/CopperSharp.Models/ModelManager"},next:{title:"Module",permalink:"/docs/api/CopperSharp.Modules/Module"}},d=[{value:"Classes",id:"classes",children:[{value:"Module",id:"module",children:[],level:3},{value:"ModuleAuthorAttribute",id:"moduleauthorattribute",children:[],level:3},{value:"ModuleInfoAttribute",id:"moduleinfoattribute",children:[],level:3},{value:"ModuleLoader",id:"moduleloader",children:[],level:3},{value:"ModuleOutputStream",id:"moduleoutputstream",children:[],level:3}],level:2},{value:"Structs",id:"structs",children:[{value:"PackMcMeta",id:"packmcmeta",children:[],level:3}],level:2}],c={toc:d};function s(e){var t=e.components,r=(0,n.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"namespace-coppersharpmodules"},"Namespace CopperSharp.Modules"),(0,a.kt)("h2",{id:"classes"},"Classes"),(0,a.kt)("h3",{id:"module"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Modules/Module"},"Module")),(0,a.kt)("p",null,"<","strong",">","Module","<","/strong",">"," ","<","br /",">","<","br /",">","\nModule represents a Datapack, that can be combined with other packs into a single Datapack.\n","<","br /",">","\n","<","br /",">","\nA Module can ","<","em",">","internally","<","/em",">"," contain different items and entities, that will be converted to functions on\nruntime.\nIt can also normally contain different functions, advancements, recipes, etc."),(0,a.kt)("h3",{id:"moduleauthorattribute"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Modules/ModuleAuthorAttribute"},"ModuleAuthorAttribute")),(0,a.kt)("p",null,"Contains a single author of this module"),(0,a.kt)("h3",{id:"moduleinfoattribute"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Modules/ModuleInfoAttribute"},"ModuleInfoAttribute")),(0,a.kt)("p",null,"An attribute that contains necessary info for module"),(0,a.kt)("h3",{id:"moduleloader"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Modules/ModuleLoader"},"ModuleLoader")),(0,a.kt)("p",null,"A global module loader"),(0,a.kt)("h3",{id:"moduleoutputstream"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Modules/ModuleOutputStream"},"ModuleOutputStream")),(0,a.kt)("p",null,"Represents a stream, piped to a certain directory, allowing to write module files"),(0,a.kt)("h2",{id:"structs"},"Structs"),(0,a.kt)("h3",{id:"packmcmeta"},(0,a.kt)("a",{parentName:"h3",href:"../CopperSharp.Modules/PackMcMeta"},"PackMcMeta")),(0,a.kt)("p",null,"MC meta info for datapack"))}s.isMDXComponent=!0}}]);